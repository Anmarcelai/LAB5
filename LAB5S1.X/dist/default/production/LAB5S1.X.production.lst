

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Feb 23 15:38:32 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0000                     	;# 
   285  0001                     	;# 
   286  0002                     	;# 
   287  0003                     	;# 
   288  0004                     	;# 
   289  0005                     	;# 
   290  0006                     	;# 
   291  0007                     	;# 
   292  0008                     	;# 
   293  0009                     	;# 
   294  000A                     	;# 
   295  000B                     	;# 
   296  000C                     	;# 
   297  000D                     	;# 
   298  000E                     	;# 
   299  000E                     	;# 
   300  000F                     	;# 
   301  0010                     	;# 
   302  0011                     	;# 
   303  0012                     	;# 
   304  0013                     	;# 
   305  0014                     	;# 
   306  0015                     	;# 
   307  0015                     	;# 
   308  0016                     	;# 
   309  0017                     	;# 
   310  0018                     	;# 
   311  0019                     	;# 
   312  001A                     	;# 
   313  001B                     	;# 
   314  001B                     	;# 
   315  001C                     	;# 
   316  001D                     	;# 
   317  001E                     	;# 
   318  001F                     	;# 
   319  0081                     	;# 
   320  0085                     	;# 
   321  0086                     	;# 
   322  0087                     	;# 
   323  0088                     	;# 
   324  0089                     	;# 
   325  008C                     	;# 
   326  008D                     	;# 
   327  008E                     	;# 
   328  008F                     	;# 
   329  0090                     	;# 
   330  0091                     	;# 
   331  0092                     	;# 
   332  0093                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0094                     	;# 
   336  0095                     	;# 
   337  0096                     	;# 
   338  0097                     	;# 
   339  0098                     	;# 
   340  0099                     	;# 
   341  009A                     	;# 
   342  009B                     	;# 
   343  009C                     	;# 
   344  009D                     	;# 
   345  009E                     	;# 
   346  009F                     	;# 
   347  0105                     	;# 
   348  0107                     	;# 
   349  0108                     	;# 
   350  0109                     	;# 
   351  010C                     	;# 
   352  010C                     	;# 
   353  010D                     	;# 
   354  010E                     	;# 
   355  010F                     	;# 
   356  0185                     	;# 
   357  0187                     	;# 
   358  0188                     	;# 
   359  0189                     	;# 
   360  018C                     	;# 
   361  018D                     	;# 
   362  000B                     _INTCONbits	set	11
   363  001E                     _ADRESH	set	30
   364  0014                     _SSPCON	set	20
   365  0006                     _PORTB	set	6
   366  001F                     _ADCON0bits	set	31
   367  0008                     _PORTD	set	8
   368  0013                     _SSPBUF	set	19
   369  0014                     _SSPCONbits	set	20
   370  000C                     _PIR1bits	set	12
   371  0063                     _SSPIF	set	99
   372  005E                     _PEIE	set	94
   373  005F                     _GIE	set	95
   374  009F                     _ADCON1bits	set	159
   375  008C                     _PIE1bits	set	140
   376  0086                     _TRISBbits	set	134
   377  0089                     _TRISEbits	set	137
   378  0085                     _TRISAbits	set	133
   379  0091                     _SSPCON2bits	set	145
   380  0087                     _TRISCbits	set	135
   381  0094                     _SSPSTAT	set	148
   382  0093                     _SSPADD	set	147
   383  0091                     _SSPCON2	set	145
   384  0088                     _TRISD	set	136
   385  0086                     _TRISB	set	134
   386  0094                     _SSPSTATbits	set	148
   387  0463                     _SSPIE	set	1123
   388  043C                     _TRISC4	set	1084
   389  043B                     _TRISC3	set	1083
   390  04A0                     _BF	set	1184
   391  0189                     _ANSELHbits	set	393
   392  0188                     _ANSELbits	set	392
   393  0189                     _ANSELH	set	393
   394  0188                     _ANSEL	set	392
   395                           
   396                           ; #config settings
   397  0000                     
   398                           	psect	cinit
   399  000F                     start_initialization:	
   400  000F                     __initialization:	
   401                           
   402                           ; Clear objects allocated to COMMON
   403  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   404  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   405  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   406  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   407  0013                     end_of_initialization:	
   408                           ;End of C runtime variable initialization code
   409                           
   410  0013                     __end_of__initialization:	
   411  0013  0183               	clrf	3
   412  0014  120A  118A  28F0   	ljmp	_main	;jump to C main() function
   413                           
   414                           	psect	bssCOMMON
   415  0076                     __pbssCOMMON:	
   416  0076                     _dato:	
   417  0076                     	ds	1
   418  0077                     _z:	
   419  0077                     	ds	1
   420  0078                     _adcValue:	
   421  0078                     	ds	1
   422  0079                     _adc:	
   423  0079                     	ds	1
   424                           
   425                           	psect	cstackCOMMON
   426  0070                     __pcstackCOMMON:	
   427  0070                     ?_readADC:	
   428  0070                     ??_readADC:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_setup:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_configADC:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ?_I2C_Slave_Init:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_isr:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ??_isr:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?_main:	
   447                           ; 1 bytes @ 0x0
   448                           
   449                           
   450                           ; 1 bytes @ 0x0
   451  0070                     	ds	3
   452  0073                     ??_configADC:	
   453  0073                     ??_I2C_Slave_Init:	
   454                           ; 1 bytes @ 0x3
   455                           
   456  0073                     I2C_Slave_Init@address:	
   457                           ; 1 bytes @ 0x3
   458                           
   459                           
   460                           ; 1 bytes @ 0x3
   461  0073                     	ds	2
   462  0075                     configADC@FOSC:	
   463                           
   464                           ; 1 bytes @ 0x5
   465  0075                     	ds	1
   466  0076                     ??_setup:	
   467  0076                     ??_main:	
   468                           ; 1 bytes @ 0x6
   469                           
   470                           
   471                           	psect	maintext
   472  00F0                     __pmaintext:	
   473                           ; 1 bytes @ 0x6
   474 ;;
   475 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   476 ;;
   477 ;; *************** function _main *****************
   478 ;; Defined at:
   479 ;;		line 93 in file "MAIN.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   488 ;; Tracked objects:
   489 ;;		On entry : B00/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   493 ;;      Params:         0       0       0       0       0
   494 ;;      Locals:         0       0       0       0       0
   495 ;;      Temps:          0       0       0       0       0
   496 ;;      Totals:         0       0       0       0       0
   497 ;;Total ram usage:        0 bytes
   498 ;; Hardware stack levels required when called:    4
   499 ;; This function calls:
   500 ;;		_setup
   501 ;; This function is called by:
   502 ;;		Startup code after reset
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           
   507                           ;psect for function _main
   508  00F0                     _main:	
   509  00F0                     l856:	
   510                           ;incstack = 0
   511                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   512                           
   513                           
   514                           ;MAIN.c: 94:     setup();
   515  00F0  120A  118A  20D7  120A  118A  	fcall	_setup
   516  00F5                     l858:	
   517                           
   518                           ;MAIN.c: 99:         if(ADCON0bits.GO_DONE == 0){
   519  00F5  1283               	bcf	3,5	;RP0=0, select bank0
   520  00F6  1303               	bcf	3,6	;RP1=0, select bank0
   521  00F7  189F               	btfsc	31,1	;volatile
   522  00F8  28FA               	goto	u131
   523  00F9  28FB               	goto	u130
   524  00FA                     u131:	
   525  00FA  28F5               	goto	l858
   526  00FB                     u130:	
   527  00FB                     l860:	
   528                           
   529                           ;MAIN.c: 100:             ADCON0bits.GO_DONE = 1;
   530  00FB  149F               	bsf	31,1	;volatile
   531  00FC  28F5               	goto	l858
   532  00FD  120A  118A  280C   	ljmp	start
   533  0100                     __end_of_main:	
   534                           
   535                           	psect	text1
   536  00D7                     __ptext1:	
   537 ;; *************** function _setup *****************
   538 ;; Defined at:
   539 ;;		line 108 in file "MAIN.c"
   540 ;; Parameters:    Size  Location     Type
   541 ;;		None
   542 ;; Auto vars:     Size  Location     Type
   543 ;;		None
   544 ;; Return value:  Size  Location     Type
   545 ;;                  1    wreg      void 
   546 ;; Registers used:
   547 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   548 ;; Tracked objects:
   549 ;;		On entry : 0/0
   550 ;;		On exit  : 0/0
   551 ;;		Unchanged: 0/0
   552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   553 ;;      Params:         0       0       0       0       0
   554 ;;      Locals:         0       0       0       0       0
   555 ;;      Temps:          0       0       0       0       0
   556 ;;      Totals:         0       0       0       0       0
   557 ;;Total ram usage:        0 bytes
   558 ;; Hardware stack levels used:    1
   559 ;; Hardware stack levels required when called:    3
   560 ;; This function calls:
   561 ;;		_I2C_Slave_Init
   562 ;;		_configADC
   563 ;; This function is called by:
   564 ;;		_main
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568                           
   569                           ;psect for function _setup
   570  00D7                     _setup:	
   571  00D7                     l808:	
   572                           ;incstack = 0
   573                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   574                           
   575                           
   576                           ;MAIN.c: 109:     ANSEL = 0;
   577  00D7  1683               	bsf	3,5	;RP0=1, select bank3
   578  00D8  1703               	bsf	3,6	;RP1=1, select bank3
   579  00D9  0188               	clrf	8	;volatile
   580                           
   581                           ;MAIN.c: 110:     ANSELH = 0;
   582  00DA  0189               	clrf	9	;volatile
   583                           
   584                           ;MAIN.c: 112:     TRISB = 0;
   585  00DB  1683               	bsf	3,5	;RP0=1, select bank1
   586  00DC  1303               	bcf	3,6	;RP1=0, select bank1
   587  00DD  0186               	clrf	6	;volatile
   588                           
   589                           ;MAIN.c: 113:     TRISD = 0;
   590  00DE  0188               	clrf	8	;volatile
   591                           
   592                           ;MAIN.c: 115:     PORTB = 0;
   593  00DF  1283               	bcf	3,5	;RP0=0, select bank0
   594  00E0  1303               	bcf	3,6	;RP1=0, select bank0
   595  00E1  0186               	clrf	6	;volatile
   596                           
   597                           ;MAIN.c: 116:     PORTD = 0;
   598  00E2  0188               	clrf	8	;volatile
   599  00E3                     l810:	
   600                           
   601                           ;MAIN.c: 117:     configADC(0);
   602  00E3  3000               	movlw	0
   603  00E4  120A  118A  2087  120A  118A  	fcall	_configADC
   604  00E9                     l812:	
   605                           
   606                           ;MAIN.c: 118:     I2C_Slave_Init(0x50);
   607  00E9  3050               	movlw	80
   608  00EA  120A  118A  20BD  120A  118A  	fcall	_I2C_Slave_Init
   609  00EF                     l73:	
   610  00EF  0008               	return
   611  00F0                     __end_of_setup:	
   612                           
   613                           	psect	text2
   614  0087                     __ptext2:	
   615 ;; *************** function _configADC *****************
   616 ;; Defined at:
   617 ;;		line 133 in file "ADC.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;  FOSC            1    wreg     unsigned char 
   620 ;; Auto vars:     Size  Location     Type
   621 ;;  FOSC            1    5[COMMON] unsigned char 
   622 ;; Return value:  Size  Location     Type
   623 ;;                  1    wreg      void 
   624 ;; Registers used:
   625 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   631 ;;      Params:         0       0       0       0       0
   632 ;;      Locals:         1       0       0       0       0
   633 ;;      Temps:          2       0       0       0       0
   634 ;;      Totals:         3       0       0       0       0
   635 ;;Total ram usage:        3 bytes
   636 ;; Hardware stack levels used:    1
   637 ;; Hardware stack levels required when called:    2
   638 ;; This function calls:
   639 ;;		Nothing
   640 ;; This function is called by:
   641 ;;		_setup
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           
   646                           ;psect for function _configADC
   647  0087                     _configADC:	
   648                           
   649                           ;incstack = 0
   650                           ; Regs used in _configADC: [wreg-fsr0h+status,2+status,0]
   651                           ;configADC@FOSC stored from wreg
   652  0087  00F5               	movwf	configADC@FOSC
   653  0088                     l780:	
   654                           
   655                           ;ADC.c: 135:     INTCONbits.PEIE=1;
   656  0088  170B               	bsf	11,6	;volatile
   657                           
   658                           ;ADC.c: 136:     PIE1bits.ADIE = 1;
   659  0089  1683               	bsf	3,5	;RP0=1, select bank1
   660  008A  1303               	bcf	3,6	;RP1=0, select bank1
   661  008B  170C               	bsf	12,6	;volatile
   662                           
   663                           ;ADC.c: 137:     PIR1bits.ADIF=0;
   664  008C  1283               	bcf	3,5	;RP0=0, select bank0
   665  008D  1303               	bcf	3,6	;RP1=0, select bank0
   666  008E  130C               	bcf	12,6	;volatile
   667                           
   668                           ;ADC.c: 138:     ADCON1bits.ADFM=0;
   669  008F  1683               	bsf	3,5	;RP0=1, select bank1
   670  0090  1303               	bcf	3,6	;RP1=0, select bank1
   671  0091  139F               	bcf	31,7	;volatile
   672                           
   673                           ;ADC.c: 139:     ADCON1bits.VCFG1=0;
   674  0092  129F               	bcf	31,5	;volatile
   675                           
   676                           ;ADC.c: 140:     ADCON1bits.VCFG0=0;
   677  0093  121F               	bcf	31,4	;volatile
   678                           
   679                           ;ADC.c: 141:     ADCON0bits.ADON=1;
   680  0094  1283               	bcf	3,5	;RP0=0, select bank0
   681  0095  1303               	bcf	3,6	;RP1=0, select bank0
   682  0096  141F               	bsf	31,0	;volatile
   683                           
   684                           ;ADC.c: 143:     switch (FOSC){
   685  0097  28A4               	goto	l784
   686  0098                     l183:	
   687                           ;ADC.c: 144:         case 0:
   688                           
   689                           
   690                           ;ADC.c: 145:             ADCON0bits.ADCS1=0;
   691  0098  139F               	bcf	31,7	;volatile
   692                           
   693                           ;ADC.c: 146:             ADCON0bits.ADCS0=0;
   694  0099  131F               	bcf	31,6	;volatile
   695                           
   696                           ;ADC.c: 147:             break;
   697  009A  28BA               	goto	l184
   698  009B                     l185:	
   699                           ;ADC.c: 148:         case 1:
   700                           
   701                           
   702                           ;ADC.c: 149:             ADCON0bits.ADCS1=0;
   703  009B  139F               	bcf	31,7	;volatile
   704                           
   705                           ;ADC.c: 150:             ADCON0bits.ADCS0=1;
   706  009C  171F               	bsf	31,6	;volatile
   707                           
   708                           ;ADC.c: 151:             break;
   709  009D  28BA               	goto	l184
   710  009E                     l186:	
   711                           ;ADC.c: 152:         case 2:
   712                           
   713                           
   714                           ;ADC.c: 153:             ADCON0bits.ADCS1=1;
   715  009E  179F               	bsf	31,7	;volatile
   716                           
   717                           ;ADC.c: 154:             ADCON0bits.ADCS0=0;
   718  009F  131F               	bcf	31,6	;volatile
   719                           
   720                           ;ADC.c: 155:             break;
   721  00A0  28BA               	goto	l184
   722  00A1                     l187:	
   723                           ;ADC.c: 156:         case 3:
   724                           
   725                           
   726                           ;ADC.c: 157:             ADCON0bits.ADCS1=1;
   727  00A1  179F               	bsf	31,7	;volatile
   728                           
   729                           ;ADC.c: 158:             ADCON0bits.ADCS0=1;
   730  00A2  171F               	bsf	31,6	;volatile
   731                           
   732                           ;ADC.c: 159:             break;
   733  00A3  28BA               	goto	l184
   734  00A4                     l784:	
   735  00A4  0875               	movf	configADC@FOSC,w
   736  00A5  00F3               	movwf	??_configADC
   737  00A6  01F4               	clrf	??_configADC+1
   738                           
   739                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   740                           ; Switch size 1, requested type "simple"
   741                           ; Number of cases is 1, Range of values is 0 to 0
   742                           ; switch strategies available:
   743                           ; Name         Instructions Cycles
   744                           ; simple_byte            4     3 (average)
   745                           ; direct_byte           11     8 (fixed)
   746                           ; jumptable            260     6 (fixed)
   747                           ;	Chosen strategy is simple_byte
   748  00A7  0874               	movf	??_configADC+1,w
   749  00A8  3A00               	xorlw	0	; case 0
   750  00A9  1903               	skipnz
   751  00AA  28AC               	goto	l936
   752  00AB  28BA               	goto	l184
   753  00AC                     l936:	
   754                           
   755                           ; Switch size 1, requested type "simple"
   756                           ; Number of cases is 4, Range of values is 0 to 3
   757                           ; switch strategies available:
   758                           ; Name         Instructions Cycles
   759                           ; simple_byte           13     7 (average)
   760                           ; direct_byte           20     8 (fixed)
   761                           ; jumptable            260     6 (fixed)
   762                           ;	Chosen strategy is simple_byte
   763  00AC  0873               	movf	??_configADC,w
   764  00AD  3A00               	xorlw	0	; case 0
   765  00AE  1903               	skipnz
   766  00AF  2898               	goto	l183
   767  00B0  3A01               	xorlw	1	; case 1
   768  00B1  1903               	skipnz
   769  00B2  289B               	goto	l185
   770  00B3  3A03               	xorlw	3	; case 2
   771  00B4  1903               	skipnz
   772  00B5  289E               	goto	l186
   773  00B6  3A01               	xorlw	1	; case 3
   774  00B7  1903               	skipnz
   775  00B8  28A1               	goto	l187
   776  00B9  28BA               	goto	l184
   777  00BA                     l184:	
   778                           
   779                           ;ADC.c: 162:     ADCON0bits.GO_DONE=1;
   780  00BA  149F               	bsf	31,1	;volatile
   781                           
   782                           ;ADC.c: 163:     INTCONbits.GIE = 1;
   783  00BB  178B               	bsf	11,7	;volatile
   784  00BC                     l188:	
   785                           ;ADC.c: 164:     return;
   786                           
   787  00BC  0008               	return
   788  00BD                     __end_of_configADC:	
   789                           
   790                           	psect	text3
   791  00BD                     __ptext3:	
   792 ;; *************** function _I2C_Slave_Init *****************
   793 ;; Defined at:
   794 ;;		line 93 in file "I2C.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;  address         1    wreg     unsigned char 
   797 ;; Auto vars:     Size  Location     Type
   798 ;;  address         1    3[COMMON] unsigned char 
   799 ;; Return value:  Size  Location     Type
   800 ;;                  1    wreg      void 
   801 ;; Registers used:
   802 ;;		wreg
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   808 ;;      Params:         0       0       0       0       0
   809 ;;      Locals:         1       0       0       0       0
   810 ;;      Temps:          0       0       0       0       0
   811 ;;      Totals:         1       0       0       0       0
   812 ;;Total ram usage:        1 bytes
   813 ;; Hardware stack levels used:    1
   814 ;; Hardware stack levels required when called:    2
   815 ;; This function calls:
   816 ;;		Nothing
   817 ;; This function is called by:
   818 ;;		_setup
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822                           
   823                           ;psect for function _I2C_Slave_Init
   824  00BD                     _I2C_Slave_Init:	
   825                           
   826                           ;incstack = 0
   827                           ; Regs used in _I2C_Slave_Init: [wreg]
   828                           ;I2C_Slave_Init@address stored from wreg
   829  00BD  00F3               	movwf	I2C_Slave_Init@address
   830  00BE                     l790:	
   831                           
   832                           ;I2C.c: 93: void I2C_Slave_Init(uint8_t address);I2C.c: 94: {;I2C.c: 95:     SSPADD = ad
      +                          dress;
   833  00BE  0873               	movf	I2C_Slave_Init@address,w
   834  00BF  1683               	bsf	3,5	;RP0=1, select bank1
   835  00C0  1303               	bcf	3,6	;RP1=0, select bank1
   836  00C1  0093               	movwf	19	;volatile
   837                           
   838                           ;I2C.c: 96:     SSPCON = 0x36;
   839  00C2  3036               	movlw	54
   840  00C3  1283               	bcf	3,5	;RP0=0, select bank0
   841  00C4  1303               	bcf	3,6	;RP1=0, select bank0
   842  00C5  0094               	movwf	20	;volatile
   843                           
   844                           ;I2C.c: 97:     SSPSTAT = 0x80;
   845  00C6  3080               	movlw	128
   846  00C7  1683               	bsf	3,5	;RP0=1, select bank1
   847  00C8  1303               	bcf	3,6	;RP1=0, select bank1
   848  00C9  0094               	movwf	20	;volatile
   849                           
   850                           ;I2C.c: 98:     SSPCON2 = 0x01;
   851  00CA  3001               	movlw	1
   852  00CB  0091               	movwf	17	;volatile
   853  00CC                     l792:	
   854                           
   855                           ;I2C.c: 99:     TRISC3 = 1;
   856  00CC  1587               	bsf	7,3	;volatile
   857  00CD                     l794:	
   858                           
   859                           ;I2C.c: 100:     TRISC4 = 1;
   860  00CD  1607               	bsf	7,4	;volatile
   861  00CE                     l796:	
   862                           
   863                           ;I2C.c: 101:     GIE = 1;
   864  00CE  178B               	bsf	11,7	;volatile
   865  00CF                     l798:	
   866                           
   867                           ;I2C.c: 102:     PEIE = 1;
   868  00CF  170B               	bsf	11,6	;volatile
   869  00D0                     l800:	
   870                           
   871                           ;I2C.c: 103:     SSPIF = 0;
   872  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   873  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   874  00D2  118C               	bcf	12,3	;volatile
   875  00D3                     l802:	
   876                           
   877                           ;I2C.c: 104:     SSPIE = 1;
   878  00D3  1683               	bsf	3,5	;RP0=1, select bank1
   879  00D4  1303               	bcf	3,6	;RP1=0, select bank1
   880  00D5  158C               	bsf	12,3	;volatile
   881  00D6                     l128:	
   882  00D6  0008               	return
   883  00D7                     __end_of_I2C_Slave_Init:	
   884                           
   885                           	psect	text4
   886  0017                     __ptext4:	
   887 ;; *************** function _isr *****************
   888 ;; Defined at:
   889 ;;		line 52 in file "MAIN.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;		None
   892 ;; Auto vars:     Size  Location     Type
   893 ;;		None
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      void 
   896 ;; Registers used:
   897 ;;		wreg, pclath, cstack
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   903 ;;      Params:         0       0       0       0       0
   904 ;;      Locals:         0       0       0       0       0
   905 ;;      Temps:          3       0       0       0       0
   906 ;;      Totals:         3       0       0       0       0
   907 ;;Total ram usage:        3 bytes
   908 ;; Hardware stack levels used:    1
   909 ;; Hardware stack levels required when called:    1
   910 ;; This function calls:
   911 ;;		_readADC
   912 ;; This function is called by:
   913 ;;		Interrupt level 1
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           
   918                           ;psect for function _isr
   919  0017                     _isr:	
   920  0017                     i1l818:	
   921                           
   922                           ;MAIN.c: 53:    if(PIR1bits.SSPIF == 1){
   923  0017  1283               	bcf	3,5	;RP0=0, select bank0
   924  0018  1303               	bcf	3,6	;RP1=0, select bank0
   925  0019  1D8C               	btfss	12,3	;volatile
   926  001A  281C               	goto	u3_21
   927  001B  281D               	goto	u3_20
   928  001C                     u3_21:	
   929  001C  2871               	goto	i1l47
   930  001D                     u3_20:	
   931  001D                     i1l820:	
   932                           
   933                           ;MAIN.c: 55:         SSPCONbits.CKP = 0;
   934  001D  1214               	bcf	20,4	;volatile
   935                           
   936                           ;MAIN.c: 57:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
   937  001E  1B14               	btfsc	20,6	;volatile
   938  001F  2821               	goto	u4_21
   939  0020  2822               	goto	u4_20
   940  0021                     u4_21:	
   941  0021  2826               	goto	i1l824
   942  0022                     u4_20:	
   943  0022                     i1l822:	
   944  0022  1F94               	btfss	20,7	;volatile
   945  0023  2825               	goto	u5_21
   946  0024  2826               	goto	u5_20
   947  0025                     u5_21:	
   948  0025  282D               	goto	i1l832
   949  0026                     u5_20:	
   950  0026                     i1l824:	
   951                           
   952                           ;MAIN.c: 58:             z = SSPBUF;
   953  0026  0813               	movf	19,w	;volatile
   954  0027  00F0               	movwf	??_isr
   955  0028  0870               	movf	??_isr,w
   956  0029  00F7               	movwf	_z
   957  002A                     i1l826:	
   958                           
   959                           ;MAIN.c: 59:             SSPCONbits.SSPOV = 0;
   960  002A  1314               	bcf	20,6	;volatile
   961  002B                     i1l828:	
   962                           
   963                           ;MAIN.c: 60:             SSPCONbits.WCOL = 0;
   964  002B  1394               	bcf	20,7	;volatile
   965  002C                     i1l830:	
   966                           
   967                           ;MAIN.c: 61:             SSPCONbits.CKP = 1;
   968  002C  1614               	bsf	20,4	;volatile
   969  002D                     i1l832:	
   970                           
   971                           ;MAIN.c: 64:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
   972  002D  1683               	bsf	3,5	;RP0=1, select bank1
   973  002E  1303               	bcf	3,6	;RP1=0, select bank1
   974  002F  1A94               	btfsc	20,5	;volatile
   975  0030  2832               	goto	u6_21
   976  0031  2833               	goto	u6_20
   977  0032                     u6_21:	
   978  0032  284E               	goto	i1l51
   979  0033                     u6_20:	
   980  0033                     i1l834:	
   981  0033  1914               	btfsc	20,2	;volatile
   982  0034  2836               	goto	u7_21
   983  0035  2837               	goto	u7_20
   984  0036                     u7_21:	
   985  0036  284E               	goto	i1l51
   986  0037                     u7_20:	
   987  0037                     i1l836:	
   988                           
   989                           ;MAIN.c: 66:             z = SSPBUF;
   990  0037  1283               	bcf	3,5	;RP0=0, select bank0
   991  0038  1303               	bcf	3,6	;RP1=0, select bank0
   992  0039  0813               	movf	19,w	;volatile
   993  003A  00F0               	movwf	??_isr
   994  003B  0870               	movf	??_isr,w
   995  003C  00F7               	movwf	_z
   996  003D                     i1l838:	
   997                           
   998                           ;MAIN.c: 68:             PIR1bits.SSPIF = 0;
   999  003D  118C               	bcf	12,3	;volatile
  1000  003E                     i1l840:	
  1001                           
  1002                           ;MAIN.c: 69:             SSPCONbits.CKP = 1;
  1003  003E  1614               	bsf	20,4	;volatile
  1004  003F                     i1l52:	
  1005                           ;MAIN.c: 70:             while(!SSPSTATbits.BF);
  1006                           
  1007  003F  1683               	bsf	3,5	;RP0=1, select bank1
  1008  0040  1303               	bcf	3,6	;RP1=0, select bank1
  1009  0041  1C14               	btfss	20,0	;volatile
  1010  0042  2844               	goto	u8_21
  1011  0043  2845               	goto	u8_20
  1012  0044                     u8_21:	
  1013  0044  283F               	goto	i1l52
  1014  0045                     u8_20:	
  1015  0045                     i1l842:	
  1016                           
  1017                           ;MAIN.c: 71:             PORTD = SSPBUF;
  1018  0045  1283               	bcf	3,5	;RP0=0, select bank0
  1019  0046  1303               	bcf	3,6	;RP1=0, select bank0
  1020  0047  0813               	movf	19,w	;volatile
  1021  0048  0088               	movwf	8	;volatile
  1022                           
  1023                           ;MAIN.c: 72:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  1024  0049  3053               	movlw	83
  1025  004A  00F0               	movwf	??_isr
  1026  004B                     u16_27:	
  1027  004B  0BF0               	decfsz	??_isr,f
  1028  004C  284B               	goto	u16_27
  1029                           
  1030                           ;MAIN.c: 74:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1031  004D  286E               	goto	i1l55
  1032  004E                     i1l51:	
  1033  004E  1A94               	btfsc	20,5	;volatile
  1034  004F  2851               	goto	u9_21
  1035  0050  2852               	goto	u9_20
  1036  0051                     u9_21:	
  1037  0051  286E               	goto	i1l55
  1038  0052                     u9_20:	
  1039  0052                     i1l844:	
  1040  0052  1D14               	btfss	20,2	;volatile
  1041  0053  2855               	goto	u10_21
  1042  0054  2856               	goto	u10_20
  1043  0055                     u10_21:	
  1044  0055  286E               	goto	i1l55
  1045  0056                     u10_20:	
  1046  0056                     i1l846:	
  1047                           
  1048                           ;MAIN.c: 75:             z = SSPBUF;
  1049  0056  1283               	bcf	3,5	;RP0=0, select bank0
  1050  0057  1303               	bcf	3,6	;RP1=0, select bank0
  1051  0058  0813               	movf	19,w	;volatile
  1052  0059  00F0               	movwf	??_isr
  1053  005A  0870               	movf	??_isr,w
  1054  005B  00F7               	movwf	_z
  1055  005C                     i1l848:	
  1056                           
  1057                           ;MAIN.c: 76:             BF = 0;
  1058  005C  1683               	bsf	3,5	;RP0=1, select bank1
  1059  005D  1303               	bcf	3,6	;RP1=0, select bank1
  1060  005E  1014               	bcf	20,0	;volatile
  1061                           
  1062                           ;MAIN.c: 77:             SSPBUF = adc;
  1063  005F  0879               	movf	_adc,w
  1064  0060  1283               	bcf	3,5	;RP0=0, select bank0
  1065  0061  1303               	bcf	3,6	;RP1=0, select bank0
  1066  0062  0093               	movwf	19	;volatile
  1067  0063                     i1l850:	
  1068                           
  1069                           ;MAIN.c: 78:             SSPCONbits.CKP = 1;
  1070  0063  1614               	bsf	20,4	;volatile
  1071                           
  1072                           ;MAIN.c: 79:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  1073  0064  3053               	movlw	83
  1074  0065  00F0               	movwf	??_isr
  1075  0066                     u17_27:	
  1076  0066  0BF0               	decfsz	??_isr,f
  1077  0067  2866               	goto	u17_27
  1078  0068                     i1l57:	
  1079                           ;MAIN.c: 80:             while(SSPSTATbits.BF);
  1080                           
  1081  0068  1683               	bsf	3,5	;RP0=1, select bank1
  1082  0069  1303               	bcf	3,6	;RP1=0, select bank1
  1083  006A  1814               	btfsc	20,0	;volatile
  1084  006B  286D               	goto	u11_21
  1085  006C  286E               	goto	u11_20
  1086  006D                     u11_21:	
  1087  006D  2868               	goto	i1l57
  1088  006E                     u11_20:	
  1089  006E                     i1l55:	
  1090                           
  1091                           ;MAIN.c: 83:         PIR1bits.SSPIF = 0;
  1092  006E  1283               	bcf	3,5	;RP0=0, select bank0
  1093  006F  1303               	bcf	3,6	;RP1=0, select bank0
  1094  0070  118C               	bcf	12,3	;volatile
  1095  0071                     i1l47:	
  1096                           ;MAIN.c: 84:     }
  1097                           
  1098                           
  1099                           ;MAIN.c: 85:     if(ADCON0bits.GO_DONE == 0){
  1100  0071  189F               	btfsc	31,1	;volatile
  1101  0072  2874               	goto	u12_21
  1102  0073  2875               	goto	u12_20
  1103  0074                     u12_21:	
  1104  0074  2880               	goto	i1l61
  1105  0075                     u12_20:	
  1106  0075                     i1l852:	
  1107                           
  1108                           ;MAIN.c: 86:         adc = readADC();
  1109  0075  120A  118A  2100  120A  118A  	fcall	_readADC
  1110  007A  00F0               	movwf	??_isr
  1111  007B  0870               	movf	??_isr,w
  1112  007C  00F9               	movwf	_adc
  1113  007D                     i1l854:	
  1114                           
  1115                           ;MAIN.c: 87:         PIR1bits.ADIF = 0;
  1116  007D  1283               	bcf	3,5	;RP0=0, select bank0
  1117  007E  1303               	bcf	3,6	;RP1=0, select bank0
  1118  007F  130C               	bcf	12,6	;volatile
  1119  0080                     i1l61:	
  1120  0080  0872               	movf	??_isr+2,w
  1121  0081  008A               	movwf	10
  1122  0082  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  1123  0083  0083               	movwf	3
  1124  0084  0EFE               	swapf	btemp,f
  1125  0085  0E7E               	swapf	btemp,w
  1126  0086  0009               	retfie
  1127  0087                     __end_of_isr:	
  1128                           
  1129                           	psect	intentry
  1130  0004                     __pintentry:	
  1131                           ;incstack = 0
  1132                           ; Regs used in _isr: [wreg+pclath+cstack]
  1133                           
  1134  0004                     interrupt_function:	
  1135  007E                     saved_w	set	btemp
  1136  0004  00FE               	movwf	btemp
  1137  0005  0E03               	swapf	3,w
  1138  0006  00F1               	movwf	??_isr+1
  1139  0007  080A               	movf	10,w
  1140  0008  00F2               	movwf	??_isr+2
  1141  0009  120A  118A  2817   	ljmp	_isr
  1142                           
  1143                           	psect	text5
  1144  0100                     __ptext5:	
  1145 ;; *************** function _readADC *****************
  1146 ;; Defined at:
  1147 ;;		line 6 in file "ADC.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;		None
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;		None
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      unsigned char 
  1154 ;; Registers used:
  1155 ;;		wreg
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1161 ;;      Params:         0       0       0       0       0
  1162 ;;      Locals:         0       0       0       0       0
  1163 ;;      Temps:          0       0       0       0       0
  1164 ;;      Totals:         0       0       0       0       0
  1165 ;;Total ram usage:        0 bytes
  1166 ;; Hardware stack levels used:    1
  1167 ;; This function calls:
  1168 ;;		Nothing
  1169 ;; This function is called by:
  1170 ;;		_isr
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           
  1175                           ;psect for function _readADC
  1176  0100                     _readADC:	
  1177  0100                     i1l804:	
  1178                           ;incstack = 0
  1179                           ; Regs used in _readADC: [wreg]
  1180                           
  1181                           
  1182                           ;ADC.c: 7:     return ADRESH;
  1183  0100  1283               	bcf	3,5	;RP0=0, select bank0
  1184  0101  1303               	bcf	3,6	;RP1=0, select bank0
  1185  0102  081E               	movf	30,w	;volatile
  1186  0103                     i1l157:	
  1187  0103  0008               	return
  1188  0104                     __end_of_readADC:	
  1189  007E                     btemp	set	126	;btemp
  1190  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_configADC

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      30
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      30
                     _I2C_Slave_Init
                          _configADC
 ---------------------------------------------------------------------------------
 (2) _configADC                                            3     3      0      15
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
                            _readADC
 ---------------------------------------------------------------------------------
 (4) _readADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _I2C_Slave_Init
     _configADC

 _isr (ROOT)
   _readADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Feb 23 15:38:32 2020

                       _z 0077               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      _BF 04A0                        l73 00EF                       l128 00D6  
                     l183 0098                       l184 00BA                       l185 009B  
                     l186 009E                       l187 00A1                       l188 00BC  
                     l800 00D0                       l802 00D3                       l810 00E3  
                     l812 00E9                       l808 00D7                       l780 0088  
                     l860 00FB                       l790 00BE                       l792 00CC  
                     l936 00AC                       l784 00A4                       l856 00F0  
                     l794 00CD                       l858 00F5                       l796 00CE  
                     l798 00CF                       _GIE 005F                       u130 00FB  
                     u131 00FA              __CFG_CPD$OFF 0000                       _adc 0079  
                     _isr 0017              __CFG_LVP$OFF 0000                      ?_isr 0070  
                    _PEIE 005E                      i1l51 004E                      i1l52 003F  
                    i1l61 0080                      i1l55 006E                      i1l47 0071  
                    i1l57 0068                      u3_20 001D                      u3_21 001C  
                    u4_20 0022                      u4_21 0021                      u5_20 0026  
                    u5_21 0025                      u6_20 0033                      u6_21 0032  
                    u7_20 0037                      u7_21 0036                      u8_20 0045  
                    u8_21 0044                      u9_20 0052                      u9_21 0051  
            __CFG_WRT$OFF 0000                      _dato 0076                      _main 00F0  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ??_isr 0070                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     i1l157 0103                     i1l804 0100  
                   i1l820 001D                     i1l830 002C                     i1l822 0022  
                   i1l840 003E                     i1l832 002D                     i1l824 0026  
                   i1l850 0063                     i1l842 0045                     i1l834 0033  
                   i1l826 002A                     i1l818 0017                     i1l852 0075  
                   i1l844 0052                     i1l836 0037                     i1l828 002B  
                   i1l854 007D                     i1l846 0056                     i1l838 003D  
                   i1l848 005C                     u10_20 0056                     u10_21 0055  
                   u11_20 006E                     u11_21 006D                     u12_20 0075  
                   u12_21 0074                     u16_27 004B                     u17_27 0066  
                   _PORTB 0006                     _PORTD 0008                     _TRISB 0086  
                   _TRISD 0088                     _SSPIE 0463                     _SSPIF 0063  
          __CFG_FCMEN$OFF 0000           __end_of_readADC 0104                     _setup 00D7  
          __CFG_BOREN$OFF 0000                     pclath 000A                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_main 0100                    ??_main 0076                    _ADRESH 001E  
                  ?_setup 0070                    _ANSELH 0189                    _SSPADD 0093  
                  _TRISC3 043B                    _TRISC4 043C                    _SSPBUF 0013  
                  _SSPCON 0014            __CFG_PWRTE$OFF 0000                 ??_readADC 0070  
                  saved_w 007E   __end_of__initialization 0013            __pcstackCOMMON 0070  
 __size_of_I2C_Slave_Init 001A             __end_of_setup 00F0        __size_of_configADC 0036  
                 ??_setup 0076     I2C_Slave_Init@address 0073                __pmaintext 00F0  
              __pintentry 0004                   _SSPCON2 0091                   _SSPSTAT 0094  
       __end_of_configADC 00BD                 _ANSELbits 0188                   __ptext1 00D7  
                 __ptext2 0087                   __ptext3 00BD                   __ptext4 0017  
                 __ptext5 0100                   _readADC 0100              __size_of_isr 0070  
    end_of_initialization 0013            _I2C_Slave_Init 00BD                 _TRISAbits 0085  
               _TRISBbits 0086                 _TRISCbits 0087                 _TRISEbits 0089  
  __end_of_I2C_Slave_Init 00D7       start_initialization 000F               __end_of_isr 0087  
__CFG_FOSC$INTRC_NOCLKOUT 0000           ?_I2C_Slave_Init 0070               __pbssCOMMON 0076  
               ___latbits 0002                 _configADC 0087                  ?_readADC 0070  
          __size_of_setup 0019         interrupt_function 0004                  _PIE1bits 008C  
                _PIR1bits 000C                ?_configADC 0070                _ADCON0bits 001F  
              _ADCON1bits 009F                  _adcValue 0078                _ANSELHbits 0189  
        __size_of_readADC 0004         __CFG_BOR4V$BOR40V 0000          ??_I2C_Slave_Init 0073  
           __size_of_main 0010               ??_configADC 0073                _INTCONbits 000B  
                intlevel1 0000               _SSPCON2bits 0091             configADC@FOSC 0075  
              _SSPCONbits 0014  
