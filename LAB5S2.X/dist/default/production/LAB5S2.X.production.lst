

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Feb 23 15:41:03 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  008F                     	;# 
    93  0090                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0095                     	;# 
   101  0096                     	;# 
   102  0097                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009A                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  0105                     	;# 
   112  0107                     	;# 
   113  0108                     	;# 
   114  0109                     	;# 
   115  010C                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  010E                     	;# 
   119  010F                     	;# 
   120  0185                     	;# 
   121  0187                     	;# 
   122  0188                     	;# 
   123  0189                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0091                     	;# 
   173  0092                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  0105                     	;# 
   190  0107                     	;# 
   191  0108                     	;# 
   192  0109                     	;# 
   193  010C                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  0185                     	;# 
   199  0187                     	;# 
   200  0188                     	;# 
   201  0189                     	;# 
   202  018C                     	;# 
   203  018D                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  000E                     	;# 
   219  000E                     	;# 
   220  000F                     	;# 
   221  0010                     	;# 
   222  0011                     	;# 
   223  0012                     	;# 
   224  0013                     	;# 
   225  0014                     	;# 
   226  0015                     	;# 
   227  0015                     	;# 
   228  0016                     	;# 
   229  0017                     	;# 
   230  0018                     	;# 
   231  0019                     	;# 
   232  001A                     	;# 
   233  001B                     	;# 
   234  001B                     	;# 
   235  001C                     	;# 
   236  001D                     	;# 
   237  001E                     	;# 
   238  001F                     	;# 
   239  0081                     	;# 
   240  0085                     	;# 
   241  0086                     	;# 
   242  0087                     	;# 
   243  0088                     	;# 
   244  0089                     	;# 
   245  008C                     	;# 
   246  008D                     	;# 
   247  008E                     	;# 
   248  008F                     	;# 
   249  0090                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0094                     	;# 
   256  0095                     	;# 
   257  0096                     	;# 
   258  0097                     	;# 
   259  0098                     	;# 
   260  0099                     	;# 
   261  009A                     	;# 
   262  009B                     	;# 
   263  009C                     	;# 
   264  009D                     	;# 
   265  009E                     	;# 
   266  009F                     	;# 
   267  0105                     	;# 
   268  0107                     	;# 
   269  0108                     	;# 
   270  0109                     	;# 
   271  010C                     	;# 
   272  010C                     	;# 
   273  010D                     	;# 
   274  010E                     	;# 
   275  010F                     	;# 
   276  0185                     	;# 
   277  0187                     	;# 
   278  0188                     	;# 
   279  0189                     	;# 
   280  018C                     	;# 
   281  018D                     	;# 
   282  0014                     _SSPCON	set	20
   283  0006                     _PORTB	set	6
   284  0006                     _PORTBbits	set	6
   285  0008                     _PORTDbits	set	8
   286  0005                     _PORTA	set	5
   287  0008                     _PORTD	set	8
   288  0013                     _SSPBUF	set	19
   289  0014                     _SSPCONbits	set	20
   290  000C                     _PIR1bits	set	12
   291  0063                     _SSPIF	set	99
   292  005E                     _PEIE	set	94
   293  005F                     _GIE	set	95
   294  0091                     _SSPCON2bits	set	145
   295  0087                     _TRISCbits	set	135
   296  0094                     _SSPSTAT	set	148
   297  0093                     _SSPADD	set	147
   298  0091                     _SSPCON2	set	145
   299  0088                     _TRISD	set	136
   300  0086                     _TRISB	set	134
   301  0085                     _TRISA	set	133
   302  0094                     _SSPSTATbits	set	148
   303  0463                     _SSPIE	set	1123
   304  043C                     _TRISC4	set	1084
   305  043B                     _TRISC3	set	1083
   306  04A0                     _BF	set	1184
   307  0189                     _ANSELH	set	393
   308  0188                     _ANSEL	set	392
   309                           
   310                           ; #config settings
   311  0000                     
   312                           	psect	cinit
   313  000F                     start_initialization:	
   314  000F                     __initialization:	
   315                           
   316                           ; Clear objects allocated to COMMON
   317  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   318  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   319  0011  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   320  0012  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   321  0013  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   322  0014  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   323  0015  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   324  0016  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   325  0017  01F8               	clrf	(__pbssCOMMON+8)& (0+127)
   326  0018                     end_of_initialization:	
   327                           ;End of C runtime variable initialization code
   328                           
   329  0018                     __end_of__initialization:	
   330  0018  0183               	clrf	3
   331  0019  120A  118A  281C   	ljmp	_main	;jump to C main() function
   332                           
   333                           	psect	bssCOMMON
   334  0070                     __pbssCOMMON:	
   335  0070                     _counterbtn2:	
   336  0070                     	ds	1
   337  0071                     _counterbtn1:	
   338  0071                     	ds	1
   339  0072                     _btn2:	
   340  0072                     	ds	1
   341  0073                     _btn1:	
   342  0073                     	ds	1
   343  0074                     _counted2:	
   344  0074                     	ds	1
   345  0075                     _counted1:	
   346  0075                     	ds	1
   347  0076                     _counter:	
   348  0076                     	ds	1
   349  0077                     _dato:	
   350  0077                     	ds	1
   351  0078                     _z:	
   352  0078                     	ds	1
   353                           
   354                           	psect	cstackCOMMON
   355  0079                     __pcstackCOMMON:	
   356  0079                     ?_setup:	
   357  0079                     ?_I2C_Slave_Init:	
   358                           ; 1 bytes @ 0x0
   359                           
   360  0079                     ?_isr:	
   361                           ; 1 bytes @ 0x0
   362                           
   363  0079                     ??_isr:	
   364                           ; 1 bytes @ 0x0
   365                           
   366  0079                     ?_main:	
   367                           ; 1 bytes @ 0x0
   368                           
   369                           
   370                           ; 1 bytes @ 0x0
   371  0079                     	ds	3
   372  007C                     ??_I2C_Slave_Init:	
   373  007C                     I2C_Slave_Init@address:	
   374                           ; 1 bytes @ 0x3
   375                           
   376                           
   377                           ; 1 bytes @ 0x3
   378  007C                     	ds	1
   379  007D                     ??_setup:	
   380  007D                     ??_main:	
   381                           ; 1 bytes @ 0x4
   382                           
   383                           
   384                           ; 1 bytes @ 0x4
   385  007D                     	ds	1
   386                           
   387                           	psect	maintext
   388  001C                     __pmaintext:	
   389 ;;
   390 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   391 ;;
   392 ;; *************** function _main *****************
   393 ;; Defined at:
   394 ;;		line 91 in file "MAIN.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;		None
   397 ;; Auto vars:     Size  Location     Type
   398 ;;		None
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      void 
   401 ;; Registers used:
   402 ;;		wreg, status,2, status,0, pclath, cstack
   403 ;; Tracked objects:
   404 ;;		On entry : B00/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   408 ;;      Params:         0       0       0       0       0
   409 ;;      Locals:         0       0       0       0       0
   410 ;;      Temps:          1       0       0       0       0
   411 ;;      Totals:         1       0       0       0       0
   412 ;;Total ram usage:        1 bytes
   413 ;; Hardware stack levels required when called:    3
   414 ;; This function calls:
   415 ;;		_setup
   416 ;; This function is called by:
   417 ;;		Startup code after reset
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421                           
   422                           ;psect for function _main
   423  001C                     _main:	
   424  001C                     l812:	
   425                           ;incstack = 0
   426                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   427                           
   428                           
   429                           ;MAIN.c: 92:     setup();
   430  001C  120A  118A  2118  120A  118A  	fcall	_setup
   431  0021                     l814:	
   432                           
   433                           ;MAIN.c: 96:     PORTDbits.RD2 = 1;
   434  0021  1283               	bcf	3,5	;RP0=0, select bank0
   435  0022  1303               	bcf	3,6	;RP1=0, select bank0
   436  0023  1508               	bsf	8,2	;volatile
   437  0024                     l816:	
   438                           
   439                           ;MAIN.c: 98:         if(PORTBbits.RB0 && btn1 == 0){
   440  0024  1C06               	btfss	6,0	;volatile
   441  0025  2827               	goto	u121
   442  0026  2828               	goto	u120
   443  0027                     u121:	
   444  0027  282F               	goto	l822
   445  0028                     u120:	
   446  0028                     l818:	
   447  0028  0873               	movf	_btn1,w
   448  0029  1D03               	btfss	3,2
   449  002A  282C               	goto	u131
   450  002B  282D               	goto	u130
   451  002C                     u131:	
   452  002C  282F               	goto	l822
   453  002D                     u130:	
   454  002D                     l820:	
   455                           
   456                           ;MAIN.c: 99:             btn1 = 1;
   457  002D  01F3               	clrf	_btn1
   458  002E  0AF3               	incf	_btn1,f
   459  002F                     l822:	
   460                           
   461                           ;MAIN.c: 102:         if (counterbtn1 <= 150) {
   462  002F  3097               	movlw	151
   463  0030  0271               	subwf	_counterbtn1,w
   464  0031  1803               	skipnc
   465  0032  2834               	goto	u141
   466  0033  2835               	goto	u140
   467  0034                     u141:	
   468  0034  283B               	goto	l79
   469  0035                     u140:	
   470  0035                     l824:	
   471                           
   472                           ;MAIN.c: 103:             counterbtn1 = counterbtn1 + btn1;
   473  0035  0873               	movf	_btn1,w
   474  0036  0771               	addwf	_counterbtn1,w
   475  0037  00FD               	movwf	??_main
   476  0038  087D               	movf	??_main,w
   477  0039  00F1               	movwf	_counterbtn1
   478                           
   479                           ;MAIN.c: 104:         }
   480  003A  285F               	goto	l840
   481  003B                     l79:	
   482                           ;MAIN.c: 106:         else {
   483                           
   484                           
   485                           ;MAIN.c: 107:             if(PORTBbits.RB0 == 1 && btn1 == 1 && counted1 == 0){
   486  003B  1C06               	btfss	6,0	;volatile
   487  003C  283E               	goto	u151
   488  003D  283F               	goto	u150
   489  003E                     u151:	
   490  003E  2858               	goto	l81
   491  003F                     u150:	
   492  003F                     l826:	
   493  003F  0373               	decf	_btn1,w
   494  0040  1D03               	btfss	3,2
   495  0041  2843               	goto	u161
   496  0042  2844               	goto	u160
   497  0043                     u161:	
   498  0043  2858               	goto	l81
   499  0044                     u160:	
   500  0044                     l828:	
   501  0044  0875               	movf	_counted1,w
   502  0045  1D03               	btfss	3,2
   503  0046  2848               	goto	u171
   504  0047  2849               	goto	u170
   505  0048                     u171:	
   506  0048  2858               	goto	l81
   507  0049                     u170:	
   508  0049                     l830:	
   509                           
   510                           ;MAIN.c: 109:                 if(PORTA == 15){
   511  0049  300F               	movlw	15
   512  004A  0605               	xorwf	5,w	;volatile
   513  004B  1D03               	btfss	3,2
   514  004C  284E               	goto	u181
   515  004D  284F               	goto	u180
   516  004E                     u181:	
   517  004E  2851               	goto	l834
   518  004F                     u180:	
   519  004F                     l832:	
   520                           
   521                           ;MAIN.c: 110:                     PORTA = 0;
   522  004F  0185               	clrf	5	;volatile
   523                           
   524                           ;MAIN.c: 111:                 }else{
   525  0050  2855               	goto	l836
   526  0051                     l834:	
   527                           
   528                           ;MAIN.c: 112:                     PORTA++;
   529  0051  3001               	movlw	1
   530  0052  00FD               	movwf	??_main
   531  0053  087D               	movf	??_main,w
   532  0054  0785               	addwf	5,f	;volatile
   533  0055                     l836:	
   534                           
   535                           ;MAIN.c: 115:                 counted1 = 1;
   536  0055  01F5               	clrf	_counted1
   537  0056  0AF5               	incf	_counted1,f
   538                           
   539                           ;MAIN.c: 116:             }
   540  0057  285F               	goto	l840
   541  0058                     l81:	
   542                           ;MAIN.c: 117:             else if(PORTBbits.RB0 == 0){
   543                           
   544  0058  1806               	btfsc	6,0	;volatile
   545  0059  285B               	goto	u191
   546  005A  285C               	goto	u190
   547  005B                     u191:	
   548  005B  285F               	goto	l840
   549  005C                     u190:	
   550  005C                     l838:	
   551                           
   552                           ;MAIN.c: 118:                 counterbtn1 = 0;
   553  005C  01F1               	clrf	_counterbtn1
   554                           
   555                           ;MAIN.c: 119:                 btn1 = 0;
   556  005D  01F3               	clrf	_btn1
   557                           
   558                           ;MAIN.c: 120:                 counted1 = 0;
   559  005E  01F5               	clrf	_counted1
   560  005F                     l840:	
   561                           
   562                           ;MAIN.c: 124:         if(PORTBbits.RB6 && btn2 == 0){
   563  005F  1F06               	btfss	6,6	;volatile
   564  0060  2862               	goto	u201
   565  0061  2863               	goto	u200
   566  0062                     u201:	
   567  0062  286A               	goto	l846
   568  0063                     u200:	
   569  0063                     l842:	
   570  0063  0872               	movf	_btn2,w
   571  0064  1D03               	btfss	3,2
   572  0065  2867               	goto	u211
   573  0066  2868               	goto	u210
   574  0067                     u211:	
   575  0067  286A               	goto	l846
   576  0068                     u210:	
   577  0068                     l844:	
   578                           
   579                           ;MAIN.c: 125:             btn2 = 1;
   580  0068  01F2               	clrf	_btn2
   581  0069  0AF2               	incf	_btn2,f
   582  006A                     l846:	
   583                           
   584                           ;MAIN.c: 127:         if (counterbtn2 <= 150) {
   585  006A  3097               	movlw	151
   586  006B  0270               	subwf	_counterbtn2,w
   587  006C  1803               	skipnc
   588  006D  286F               	goto	u221
   589  006E  2870               	goto	u220
   590  006F                     u221:	
   591  006F  2876               	goto	l87
   592  0070                     u220:	
   593  0070                     l848:	
   594                           
   595                           ;MAIN.c: 128:           counterbtn2 = counterbtn2 + btn2;
   596  0070  0872               	movf	_btn2,w
   597  0071  0770               	addwf	_counterbtn2,w
   598  0072  00FD               	movwf	??_main
   599  0073  087D               	movf	??_main,w
   600  0074  00F0               	movwf	_counterbtn2
   601                           
   602                           ;MAIN.c: 129:         }else{
   603  0075  2824               	goto	l816
   604  0076                     l87:	
   605                           
   606                           ;MAIN.c: 130:             if(PORTBbits.RB6 == 1 && btn2 == 1 && counted2 == 0){
   607  0076  1F06               	btfss	6,6	;volatile
   608  0077  2879               	goto	u231
   609  0078  287A               	goto	u230
   610  0079                     u231:	
   611  0079  2891               	goto	l89
   612  007A                     u230:	
   613  007A                     l850:	
   614  007A  0372               	decf	_btn2,w
   615  007B  1D03               	btfss	3,2
   616  007C  287E               	goto	u241
   617  007D  287F               	goto	u240
   618  007E                     u241:	
   619  007E  2891               	goto	l89
   620  007F                     u240:	
   621  007F                     l852:	
   622  007F  0874               	movf	_counted2,w
   623  0080  1D03               	btfss	3,2
   624  0081  2883               	goto	u251
   625  0082  2884               	goto	u250
   626  0083                     u251:	
   627  0083  2891               	goto	l89
   628  0084                     u250:	
   629  0084                     l854:	
   630                           
   631                           ;MAIN.c: 132:                 if(PORTA == 0){
   632  0084  0805               	movf	5,w	;volatile
   633  0085  1D03               	btfss	3,2
   634  0086  2888               	goto	u261
   635  0087  2889               	goto	u260
   636  0088                     u261:	
   637  0088  288C               	goto	l858
   638  0089                     u260:	
   639  0089                     l856:	
   640                           
   641                           ;MAIN.c: 133:                     PORTA = 15;
   642  0089  300F               	movlw	15
   643  008A  0085               	movwf	5	;volatile
   644                           
   645                           ;MAIN.c: 134:                 }else{
   646  008B  288E               	goto	l860
   647  008C                     l858:	
   648                           
   649                           ;MAIN.c: 135:                     PORTA--;
   650  008C  3001               	movlw	1
   651  008D  0285               	subwf	5,f	;volatile
   652  008E                     l860:	
   653                           
   654                           ;MAIN.c: 137:                 counted2 = 1;
   655  008E  01F4               	clrf	_counted2
   656  008F  0AF4               	incf	_counted2,f
   657                           
   658                           ;MAIN.c: 138:             }else if(PORTBbits.RB6 == 0){
   659  0090  2824               	goto	l816
   660  0091                     l89:	
   661  0091  1B06               	btfsc	6,6	;volatile
   662  0092  2894               	goto	u271
   663  0093  2895               	goto	u270
   664  0094                     u271:	
   665  0094  2899               	goto	l88
   666  0095                     u270:	
   667  0095                     l862:	
   668                           
   669                           ;MAIN.c: 139:                 counterbtn2 = 0;
   670  0095  01F0               	clrf	_counterbtn2
   671                           
   672                           ;MAIN.c: 140:                 btn2 = 0;
   673  0096  01F2               	clrf	_btn2
   674                           
   675                           ;MAIN.c: 141:                 counted2 = 0;
   676  0097  01F4               	clrf	_counted2
   677  0098  2824               	goto	l816
   678  0099                     l88:	
   679                           ;MAIN.c: 143:         }
   680                           
   681  0099  2824               	goto	l816
   682  009A  120A  118A  280C   	ljmp	start
   683  009D                     __end_of_main:	
   684                           
   685                           	psect	text1
   686  0118                     __ptext1:	
   687 ;; *************** function _setup *****************
   688 ;; Defined at:
   689 ;;		line 150 in file "MAIN.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;		None
   692 ;; Auto vars:     Size  Location     Type
   693 ;;		None
   694 ;; Return value:  Size  Location     Type
   695 ;;                  1    wreg      void 
   696 ;; Registers used:
   697 ;;		wreg, status,2, status,0, pclath, cstack
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   703 ;;      Params:         0       0       0       0       0
   704 ;;      Locals:         0       0       0       0       0
   705 ;;      Temps:          0       0       0       0       0
   706 ;;      Totals:         0       0       0       0       0
   707 ;;Total ram usage:        0 bytes
   708 ;; Hardware stack levels used:    1
   709 ;; Hardware stack levels required when called:    2
   710 ;; This function calls:
   711 ;;		_I2C_Slave_Init
   712 ;; This function is called by:
   713 ;;		_main
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           
   718                           ;psect for function _setup
   719  0118                     _setup:	
   720  0118                     l760:	
   721                           ;incstack = 0
   722                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   723                           
   724                           
   725                           ;MAIN.c: 151:     ANSEL = 0;
   726  0118  1683               	bsf	3,5	;RP0=1, select bank3
   727  0119  1703               	bsf	3,6	;RP1=1, select bank3
   728  011A  0188               	clrf	8	;volatile
   729                           
   730                           ;MAIN.c: 152:     ANSELH = 0;
   731  011B  0189               	clrf	9	;volatile
   732                           
   733                           ;MAIN.c: 154:     TRISA = 0;
   734  011C  1683               	bsf	3,5	;RP0=1, select bank1
   735  011D  1303               	bcf	3,6	;RP1=0, select bank1
   736  011E  0185               	clrf	5	;volatile
   737  011F                     l762:	
   738                           
   739                           ;MAIN.c: 155:     TRISB = 0b01000001;
   740  011F  3041               	movlw	65
   741  0120  0086               	movwf	6	;volatile
   742  0121                     l764:	
   743                           
   744                           ;MAIN.c: 156:     TRISD = 0;
   745  0121  0188               	clrf	8	;volatile
   746  0122                     l766:	
   747                           
   748                           ;MAIN.c: 158:     PORTA = 0;
   749  0122  1283               	bcf	3,5	;RP0=0, select bank0
   750  0123  1303               	bcf	3,6	;RP1=0, select bank0
   751  0124  0185               	clrf	5	;volatile
   752  0125                     l768:	
   753                           
   754                           ;MAIN.c: 159:     PORTB = 0;
   755  0125  0186               	clrf	6	;volatile
   756  0126                     l770:	
   757                           
   758                           ;MAIN.c: 160:     PORTD = 0;
   759  0126  0188               	clrf	8	;volatile
   760  0127                     l772:	
   761                           
   762                           ;MAIN.c: 161:     I2C_Slave_Init(0x60);
   763  0127  3060               	movlw	96
   764  0128  120A  118A  20FE  120A  118A  	fcall	_I2C_Slave_Init
   765  012D                     l99:	
   766  012D  0008               	return
   767  012E                     __end_of_setup:	
   768                           
   769                           	psect	text2
   770  00FE                     __ptext2:	
   771 ;; *************** function _I2C_Slave_Init *****************
   772 ;; Defined at:
   773 ;;		line 93 in file "I2C.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;  address         1    wreg     unsigned char 
   776 ;; Auto vars:     Size  Location     Type
   777 ;;  address         1    3[COMMON] unsigned char 
   778 ;; Return value:  Size  Location     Type
   779 ;;                  1    wreg      void 
   780 ;; Registers used:
   781 ;;		wreg
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   787 ;;      Params:         0       0       0       0       0
   788 ;;      Locals:         1       0       0       0       0
   789 ;;      Temps:          0       0       0       0       0
   790 ;;      Totals:         1       0       0       0       0
   791 ;;Total ram usage:        1 bytes
   792 ;; Hardware stack levels used:    1
   793 ;; Hardware stack levels required when called:    1
   794 ;; This function calls:
   795 ;;		Nothing
   796 ;; This function is called by:
   797 ;;		_setup
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           
   802                           ;psect for function _I2C_Slave_Init
   803  00FE                     _I2C_Slave_Init:	
   804                           
   805                           ;incstack = 0
   806                           ; Regs used in _I2C_Slave_Init: [wreg]
   807                           ;I2C_Slave_Init@address stored from wreg
   808  00FE  00FC               	movwf	I2C_Slave_Init@address
   809  00FF                     l746:	
   810                           
   811                           ;I2C.c: 93: void I2C_Slave_Init(uint8_t address);I2C.c: 94: {;I2C.c: 95:     SSPADD = ad
      +                          dress;
   812  00FF  087C               	movf	I2C_Slave_Init@address,w
   813  0100  1683               	bsf	3,5	;RP0=1, select bank1
   814  0101  1303               	bcf	3,6	;RP1=0, select bank1
   815  0102  0093               	movwf	19	;volatile
   816                           
   817                           ;I2C.c: 96:     SSPCON = 0x36;
   818  0103  3036               	movlw	54
   819  0104  1283               	bcf	3,5	;RP0=0, select bank0
   820  0105  1303               	bcf	3,6	;RP1=0, select bank0
   821  0106  0094               	movwf	20	;volatile
   822                           
   823                           ;I2C.c: 97:     SSPSTAT = 0x80;
   824  0107  3080               	movlw	128
   825  0108  1683               	bsf	3,5	;RP0=1, select bank1
   826  0109  1303               	bcf	3,6	;RP1=0, select bank1
   827  010A  0094               	movwf	20	;volatile
   828                           
   829                           ;I2C.c: 98:     SSPCON2 = 0x01;
   830  010B  3001               	movlw	1
   831  010C  0091               	movwf	17	;volatile
   832  010D                     l748:	
   833                           
   834                           ;I2C.c: 99:     TRISC3 = 1;
   835  010D  1587               	bsf	7,3	;volatile
   836  010E                     l750:	
   837                           
   838                           ;I2C.c: 100:     TRISC4 = 1;
   839  010E  1607               	bsf	7,4	;volatile
   840  010F                     l752:	
   841                           
   842                           ;I2C.c: 101:     GIE = 1;
   843  010F  178B               	bsf	11,7	;volatile
   844  0110                     l754:	
   845                           
   846                           ;I2C.c: 102:     PEIE = 1;
   847  0110  170B               	bsf	11,6	;volatile
   848  0111                     l756:	
   849                           
   850                           ;I2C.c: 103:     SSPIF = 0;
   851  0111  1283               	bcf	3,5	;RP0=0, select bank0
   852  0112  1303               	bcf	3,6	;RP1=0, select bank0
   853  0113  118C               	bcf	12,3	;volatile
   854  0114                     l758:	
   855                           
   856                           ;I2C.c: 104:     SSPIE = 1;
   857  0114  1683               	bsf	3,5	;RP0=1, select bank1
   858  0115  1303               	bcf	3,6	;RP1=0, select bank1
   859  0116  158C               	bsf	12,3	;volatile
   860  0117                     l154:	
   861  0117  0008               	return
   862  0118                     __end_of_I2C_Slave_Init:	
   863                           
   864                           	psect	text3
   865  009D                     __ptext3:	
   866 ;; *************** function _isr *****************
   867 ;; Defined at:
   868 ;;		line 54 in file "MAIN.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;		None
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		wreg
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   882 ;;      Params:         0       0       0       0       0
   883 ;;      Locals:         0       0       0       0       0
   884 ;;      Temps:          3       0       0       0       0
   885 ;;      Totals:         3       0       0       0       0
   886 ;;Total ram usage:        3 bytes
   887 ;; Hardware stack levels used:    1
   888 ;; This function calls:
   889 ;;		Nothing
   890 ;; This function is called by:
   891 ;;		Interrupt level 1
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           
   896                           ;psect for function _isr
   897  009D                     _isr:	
   898  009D                     i1l778:	
   899                           
   900                           ;MAIN.c: 55:    if(PIR1bits.SSPIF == 1){
   901  009D  1283               	bcf	3,5	;RP0=0, select bank0
   902  009E  1303               	bcf	3,6	;RP1=0, select bank0
   903  009F  1D8C               	btfss	12,3	;volatile
   904  00A0  28A2               	goto	u3_21
   905  00A1  28A3               	goto	u3_20
   906  00A2                     u3_21:	
   907  00A2  28F7               	goto	i1l72
   908  00A3                     u3_20:	
   909  00A3                     i1l780:	
   910                           
   911                           ;MAIN.c: 57:         SSPCONbits.CKP = 0;
   912  00A3  1214               	bcf	20,4	;volatile
   913                           
   914                           ;MAIN.c: 59:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
   915  00A4  1B14               	btfsc	20,6	;volatile
   916  00A5  28A7               	goto	u4_21
   917  00A6  28A8               	goto	u4_20
   918  00A7                     u4_21:	
   919  00A7  28AC               	goto	i1l784
   920  00A8                     u4_20:	
   921  00A8                     i1l782:	
   922  00A8  1F94               	btfss	20,7	;volatile
   923  00A9  28AB               	goto	u5_21
   924  00AA  28AC               	goto	u5_20
   925  00AB                     u5_21:	
   926  00AB  28B3               	goto	i1l792
   927  00AC                     u5_20:	
   928  00AC                     i1l784:	
   929                           
   930                           ;MAIN.c: 60:             z = SSPBUF;
   931  00AC  0813               	movf	19,w	;volatile
   932  00AD  00F9               	movwf	??_isr
   933  00AE  0879               	movf	??_isr,w
   934  00AF  00F8               	movwf	_z
   935  00B0                     i1l786:	
   936                           
   937                           ;MAIN.c: 61:             SSPCONbits.SSPOV = 0;
   938  00B0  1314               	bcf	20,6	;volatile
   939  00B1                     i1l788:	
   940                           
   941                           ;MAIN.c: 62:             SSPCONbits.WCOL = 0;
   942  00B1  1394               	bcf	20,7	;volatile
   943  00B2                     i1l790:	
   944                           
   945                           ;MAIN.c: 63:             SSPCONbits.CKP = 1;
   946  00B2  1614               	bsf	20,4	;volatile
   947  00B3                     i1l792:	
   948                           
   949                           ;MAIN.c: 66:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
   950  00B3  1683               	bsf	3,5	;RP0=1, select bank1
   951  00B4  1303               	bcf	3,6	;RP1=0, select bank1
   952  00B5  1A94               	btfsc	20,5	;volatile
   953  00B6  28B8               	goto	u6_21
   954  00B7  28B9               	goto	u6_20
   955  00B8                     u6_21:	
   956  00B8  28D4               	goto	i1l63
   957  00B9                     u6_20:	
   958  00B9                     i1l794:	
   959  00B9  1914               	btfsc	20,2	;volatile
   960  00BA  28BC               	goto	u7_21
   961  00BB  28BD               	goto	u7_20
   962  00BC                     u7_21:	
   963  00BC  28D4               	goto	i1l63
   964  00BD                     u7_20:	
   965  00BD                     i1l796:	
   966                           
   967                           ;MAIN.c: 68:             z = SSPBUF;
   968  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   969  00BE  1303               	bcf	3,6	;RP1=0, select bank0
   970  00BF  0813               	movf	19,w	;volatile
   971  00C0  00F9               	movwf	??_isr
   972  00C1  0879               	movf	??_isr,w
   973  00C2  00F8               	movwf	_z
   974  00C3                     i1l798:	
   975                           
   976                           ;MAIN.c: 70:             PIR1bits.SSPIF = 0;
   977  00C3  118C               	bcf	12,3	;volatile
   978  00C4                     i1l800:	
   979                           
   980                           ;MAIN.c: 71:             SSPCONbits.CKP = 1;
   981  00C4  1614               	bsf	20,4	;volatile
   982  00C5                     i1l64:	
   983                           ;MAIN.c: 72:             while(!SSPSTATbits.BF);
   984                           
   985  00C5  1683               	bsf	3,5	;RP0=1, select bank1
   986  00C6  1303               	bcf	3,6	;RP1=0, select bank1
   987  00C7  1C14               	btfss	20,0	;volatile
   988  00C8  28CA               	goto	u8_21
   989  00C9  28CB               	goto	u8_20
   990  00CA                     u8_21:	
   991  00CA  28C5               	goto	i1l64
   992  00CB                     u8_20:	
   993  00CB                     i1l802:	
   994                           
   995                           ;MAIN.c: 73:             PORTD = SSPBUF;
   996  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   997  00CC  1303               	bcf	3,6	;RP1=0, select bank0
   998  00CD  0813               	movf	19,w	;volatile
   999  00CE  0088               	movwf	8	;volatile
  1000                           
  1001                           ;MAIN.c: 74:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  1002  00CF  3053               	movlw	83
  1003  00D0  00F9               	movwf	??_isr
  1004  00D1                     u30_27:	
  1005  00D1  0BF9               	decfsz	??_isr,f
  1006  00D2  28D1               	goto	u30_27
  1007                           
  1008                           ;MAIN.c: 76:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1009  00D3  28F4               	goto	i1l67
  1010  00D4                     i1l63:	
  1011  00D4  1A94               	btfsc	20,5	;volatile
  1012  00D5  28D7               	goto	u9_21
  1013  00D6  28D8               	goto	u9_20
  1014  00D7                     u9_21:	
  1015  00D7  28F4               	goto	i1l67
  1016  00D8                     u9_20:	
  1017  00D8                     i1l804:	
  1018  00D8  1D14               	btfss	20,2	;volatile
  1019  00D9  28DB               	goto	u10_21
  1020  00DA  28DC               	goto	u10_20
  1021  00DB                     u10_21:	
  1022  00DB  28F4               	goto	i1l67
  1023  00DC                     u10_20:	
  1024  00DC                     i1l806:	
  1025                           
  1026                           ;MAIN.c: 77:             z = SSPBUF;
  1027  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1028  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1029  00DE  0813               	movf	19,w	;volatile
  1030  00DF  00F9               	movwf	??_isr
  1031  00E0  0879               	movf	??_isr,w
  1032  00E1  00F8               	movwf	_z
  1033  00E2                     i1l808:	
  1034                           
  1035                           ;MAIN.c: 78:             BF = 0;
  1036  00E2  1683               	bsf	3,5	;RP0=1, select bank1
  1037  00E3  1303               	bcf	3,6	;RP1=0, select bank1
  1038  00E4  1014               	bcf	20,0	;volatile
  1039                           
  1040                           ;MAIN.c: 79:             SSPBUF = PORTA;
  1041  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1042  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1043  00E7  0805               	movf	5,w	;volatile
  1044  00E8  0093               	movwf	19	;volatile
  1045  00E9                     i1l810:	
  1046                           
  1047                           ;MAIN.c: 80:             SSPCONbits.CKP = 1;
  1048  00E9  1614               	bsf	20,4	;volatile
  1049                           
  1050                           ;MAIN.c: 81:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  1051  00EA  3053               	movlw	83
  1052  00EB  00F9               	movwf	??_isr
  1053  00EC                     u31_27:	
  1054  00EC  0BF9               	decfsz	??_isr,f
  1055  00ED  28EC               	goto	u31_27
  1056  00EE                     i1l69:	
  1057                           ;MAIN.c: 82:             while(SSPSTATbits.BF);
  1058                           
  1059  00EE  1683               	bsf	3,5	;RP0=1, select bank1
  1060  00EF  1303               	bcf	3,6	;RP1=0, select bank1
  1061  00F0  1814               	btfsc	20,0	;volatile
  1062  00F1  28F3               	goto	u11_21
  1063  00F2  28F4               	goto	u11_20
  1064  00F3                     u11_21:	
  1065  00F3  28EE               	goto	i1l69
  1066  00F4                     u11_20:	
  1067  00F4                     i1l67:	
  1068                           
  1069                           ;MAIN.c: 85:         PIR1bits.SSPIF = 0;
  1070  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1071  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1072  00F6  118C               	bcf	12,3	;volatile
  1073  00F7                     i1l72:	
  1074  00F7  087B               	movf	??_isr+2,w
  1075  00F8  008A               	movwf	10
  1076  00F9  0E7A               	swapf	(??_isr+1)^(0+4294967168),w
  1077  00FA  0083               	movwf	3
  1078  00FB  0EFE               	swapf	btemp,f
  1079  00FC  0E7E               	swapf	btemp,w
  1080  00FD  0009               	retfie
  1081  00FE                     __end_of_isr:	
  1082  007E                     btemp	set	126	;btemp
  1083  007E                     wtemp0	set	126
  1084                           
  1085                           	psect	intentry
  1086  0004                     __pintentry:	
  1087                           ;incstack = 0
  1088                           ; Regs used in _isr: [wreg]
  1089                           
  1090  0004                     interrupt_function:	
  1091  007E                     saved_w	set	btemp
  1092  0004  00FE               	movwf	btemp
  1093  0005  0E03               	swapf	3,w
  1094  0006  00FA               	movwf	??_isr+1
  1095  0007  080A               	movf	10,w
  1096  0008  00FB               	movwf	??_isr+2
  1097  0009  120A  118A  289D   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_I2C_Slave_Init

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      15
                                              4 COMMON     1     1      0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      15
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _I2C_Slave_Init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Feb 23 15:41:03 2020

                       _z 0078               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      _BF 04A0                        l81 0058                        l87 0076  
                      l79 003B                        l88 0099                        l89 0091  
                      l99 012D                       l154 0117                       l820 002D  
                     l812 001C                       l750 010E                       l830 0049  
                     l822 002F                       l814 0021                       l752 010F  
                     l760 0118                       l832 004F                       l840 005F  
                     l824 0035                       l816 0024                       l754 0110  
                     l746 00FF                       l770 0126                       l762 011F  
                     l850 007A                       l842 0063                       l834 0051  
                     l826 003F                       l818 0028                       l756 0111  
                     l748 010D                       l772 0127                       l764 0121  
                     l860 008E                       l852 007F                       l844 0068  
                     l836 0055                       l828 0044                       l758 0114  
                     l766 0122                       l862 0095                       l854 0084  
                     l846 006A                       l838 005C                       l768 0125  
                     l856 0089                       l848 0070                       l858 008C  
                     _GIE 005F                       u200 0063                       u120 0028  
                     u201 0062                       u121 0027                       u210 0068  
                     u130 002D                       u211 0067                       u131 002C  
                     u220 0070                       u140 0035                       u221 006F  
                     u141 0034                       u230 007A                       u150 003F  
                     u231 0079                       u151 003E                       u240 007F  
                     u160 0044                       u241 007E                       u161 0043  
                     u250 0084                       u170 0049                       u251 0083  
                     u171 0048                       u260 0089                       u180 004F  
                     u261 0088                       u181 004E                       u270 0095  
                     u190 005C                       u271 0094                       u191 005B  
            __CFG_CPD$OFF 0000                       _isr 009D              __CFG_LVP$OFF 0000  
                    ?_isr 0079                      _PEIE 005E                      i1l63 00D4  
                    i1l64 00C5                      i1l72 00F7                      i1l67 00F4  
                    i1l69 00EE                      u3_20 00A3                      u3_21 00A2  
                    u4_20 00A8                      u4_21 00A7                      u5_20 00AC  
                    u5_21 00AB                      u6_20 00B9                      u6_21 00B8  
                    u7_20 00BD                      u7_21 00BC                      u8_20 00CB  
                    u8_21 00CA                      u9_20 00D8                      u9_21 00D7  
            __CFG_WRT$OFF 0000                      _btn1 0073                      _btn2 0072  
                    _dato 0077                      _main 001C                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_isr 0079  
                   ?_main 0079             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   i1l800 00C4                     i1l810 00E9                     i1l802 00CB  
                   i1l804 00D8                     i1l806 00DC                     i1l808 00E2  
                   i1l780 00A3                     i1l790 00B2                     i1l782 00A8  
                   i1l792 00B3                     i1l784 00AC                     i1l794 00B9  
                   i1l786 00B0                     i1l778 009D                     i1l796 00BD  
                   i1l788 00B1                     i1l798 00C3                     u10_20 00DC  
                   u10_21 00DB                     u11_20 00F4                     u11_21 00F3  
                   u30_27 00D1                     u31_27 00EC                     _PORTA 0005  
                   _PORTB 0006                     _PORTD 0008                     _TRISA 0085  
                   _TRISB 0086                     _TRISD 0088                     _SSPIE 0463  
                   _SSPIF 0063            __CFG_FCMEN$OFF 0000                     _setup 0118  
          __CFG_BOREN$OFF 0000                     pclath 000A                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 000F  
            __end_of_main 009D                    ??_main 007D                    ?_setup 0079  
                  _ANSELH 0189                    _SSPADD 0093                    _TRISC3 043B  
                  _TRISC4 043C                    _SSPBUF 0013                    _SSPCON 0014  
          __CFG_PWRTE$OFF 0000                    saved_w 007E   __end_of__initialization 0018  
          __pcstackCOMMON 0079   __size_of_I2C_Slave_Init 001A             __end_of_setup 012E  
                 ??_setup 007D     I2C_Slave_Init@address 007C                __pmaintext 001C  
              __pintentry 0004                   _SSPCON2 0091                   _SSPSTAT 0094  
                 __ptext1 0118                   __ptext2 00FE                   __ptext3 009D  
                 _counter 0076              __size_of_isr 0061      end_of_initialization 0018  
          _I2C_Slave_Init 00FE                 _PORTBbits 0006                 _PORTDbits 0008  
               _TRISCbits 0087    __end_of_I2C_Slave_Init 0118       start_initialization 000F  
             __end_of_isr 00FE  __CFG_FOSC$INTRC_NOCLKOUT 0000           ?_I2C_Slave_Init 0079  
             __pbssCOMMON 0070                 ___latbits 0002            __size_of_setup 0016  
       interrupt_function 0004                  _PIR1bits 000C               _counterbtn1 0071  
             _counterbtn2 0070         __CFG_BOR4V$BOR40V 0000          ??_I2C_Slave_Init 007C  
                _counted1 0075                  _counted2 0074             __size_of_main 0081  
                intlevel1 0000               _SSPCON2bits 0091                _SSPCONbits 0014  
