

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Feb 23 15:43:43 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  0000                     	;# 
   285  0001                     	;# 
   286  0002                     	;# 
   287  0003                     	;# 
   288  0004                     	;# 
   289  0005                     	;# 
   290  0006                     	;# 
   291  0007                     	;# 
   292  0008                     	;# 
   293  0009                     	;# 
   294  000A                     	;# 
   295  000B                     	;# 
   296  000C                     	;# 
   297  000D                     	;# 
   298  000E                     	;# 
   299  000E                     	;# 
   300  000F                     	;# 
   301  0010                     	;# 
   302  0011                     	;# 
   303  0012                     	;# 
   304  0013                     	;# 
   305  0014                     	;# 
   306  0015                     	;# 
   307  0015                     	;# 
   308  0016                     	;# 
   309  0017                     	;# 
   310  0018                     	;# 
   311  0019                     	;# 
   312  001A                     	;# 
   313  001B                     	;# 
   314  001B                     	;# 
   315  001C                     	;# 
   316  001D                     	;# 
   317  001E                     	;# 
   318  001F                     	;# 
   319  0081                     	;# 
   320  0085                     	;# 
   321  0086                     	;# 
   322  0087                     	;# 
   323  0088                     	;# 
   324  0089                     	;# 
   325  008C                     	;# 
   326  008D                     	;# 
   327  008E                     	;# 
   328  008F                     	;# 
   329  0090                     	;# 
   330  0091                     	;# 
   331  0092                     	;# 
   332  0093                     	;# 
   333  0093                     	;# 
   334  0093                     	;# 
   335  0094                     	;# 
   336  0095                     	;# 
   337  0096                     	;# 
   338  0097                     	;# 
   339  0098                     	;# 
   340  0099                     	;# 
   341  009A                     	;# 
   342  009B                     	;# 
   343  009C                     	;# 
   344  009D                     	;# 
   345  009E                     	;# 
   346  009F                     	;# 
   347  0105                     	;# 
   348  0107                     	;# 
   349  0108                     	;# 
   350  0109                     	;# 
   351  010C                     	;# 
   352  010C                     	;# 
   353  010D                     	;# 
   354  010E                     	;# 
   355  010F                     	;# 
   356  0185                     	;# 
   357  0187                     	;# 
   358  0188                     	;# 
   359  0189                     	;# 
   360  018C                     	;# 
   361  018D                     	;# 
   362  000B                     _INTCONbits	set	11
   363  001E                     _ADRESH	set	30
   364  0014                     _SSPCON	set	20
   365  0006                     _PORTB	set	6
   366  001F                     _ADCON0bits	set	31
   367  0008                     _PORTD	set	8
   368  0013                     _SSPBUF	set	19
   369  0014                     _SSPCONbits	set	20
   370  000C                     _PIR1bits	set	12
   371  0063                     _SSPIF	set	99
   372  005E                     _PEIE	set	94
   373  005F                     _GIE	set	95
   374  009F                     _ADCON1bits	set	159
   375  008C                     _PIE1bits	set	140
   376  0086                     _TRISBbits	set	134
   377  0089                     _TRISEbits	set	137
   378  0085                     _TRISAbits	set	133
   379  0091                     _SSPCON2bits	set	145
   380  0087                     _TRISCbits	set	135
   381  0094                     _SSPSTAT	set	148
   382  0093                     _SSPADD	set	147
   383  0091                     _SSPCON2	set	145
   384  0088                     _TRISD	set	136
   385  0086                     _TRISB	set	134
   386  0094                     _SSPSTATbits	set	148
   387  0463                     _SSPIE	set	1123
   388  043C                     _TRISC4	set	1084
   389  043B                     _TRISC3	set	1083
   390  04A0                     _BF	set	1184
   391  0189                     _ANSELHbits	set	393
   392  0188                     _ANSELbits	set	392
   393  0189                     _ANSELH	set	393
   394  0188                     _ANSEL	set	392
   395                           
   396                           ; #config settings
   397  0000                     
   398                           	psect	cinit
   399  000F                     start_initialization:	
   400  000F                     __initialization:	
   401                           
   402                           ; Clear objects allocated to COMMON
   403  000F  01F6               	clrf	__pbssCOMMON& (0+127)
   404  0010  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   405  0011  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   406  0012  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   407  0013                     end_of_initialization:	
   408                           ;End of C runtime variable initialization code
   409                           
   410  0013                     __end_of__initialization:	
   411  0013  0183               	clrf	3
   412  0014  120A  118A  28F0   	ljmp	_main	;jump to C main() function
   413                           
   414                           	psect	bssCOMMON
   415  0076                     __pbssCOMMON:	
   416  0076                     _dato:	
   417  0076                     	ds	1
   418  0077                     _z:	
   419  0077                     	ds	1
   420  0078                     _adcValue:	
   421  0078                     	ds	1
   422  0079                     _adc:	
   423  0079                     	ds	1
   424                           
   425                           	psect	cstackCOMMON
   426  0070                     __pcstackCOMMON:	
   427  0070                     ?_readADC:	
   428  0070                     ??_readADC:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_setup:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_configADC:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ?_I2C_Slave_Init:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_isr:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ??_isr:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ?_main:	
   447                           ; 1 bytes @ 0x0
   448                           
   449                           
   450                           ; 1 bytes @ 0x0
   451  0070                     	ds	3
   452  0073                     ??_configADC:	
   453  0073                     ??_I2C_Slave_Init:	
   454                           ; 1 bytes @ 0x3
   455                           
   456  0073                     I2C_Slave_Init@address:	
   457                           ; 1 bytes @ 0x3
   458                           
   459                           
   460                           ; 1 bytes @ 0x3
   461  0073                     	ds	2
   462  0075                     configADC@FOSC:	
   463                           
   464                           ; 1 bytes @ 0x5
   465  0075                     	ds	1
   466  0076                     ??_setup:	
   467  0076                     ??_main:	
   468                           ; 1 bytes @ 0x6
   469                           
   470                           
   471                           	psect	maintext
   472  00F0                     __pmaintext:	
   473                           ; 1 bytes @ 0x6
   474 ;;
   475 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   476 ;;
   477 ;; *************** function _main *****************
   478 ;; Defined at:
   479 ;;		line 93 in file "MAIN.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   488 ;; Tracked objects:
   489 ;;		On entry : B00/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   493 ;;      Params:         0       0       0       0       0
   494 ;;      Locals:         0       0       0       0       0
   495 ;;      Temps:          0       0       0       0       0
   496 ;;      Totals:         0       0       0       0       0
   497 ;;Total ram usage:        0 bytes
   498 ;; Hardware stack levels required when called:    4
   499 ;; This function calls:
   500 ;;		_setup
   501 ;; This function is called by:
   502 ;;		Startup code after reset
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           
   507                           ;psect for function _main
   508  00F0                     _main:	
   509  00F0                     l856:	
   510                           ;incstack = 0
   511                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   512                           
   513                           
   514                           ;MAIN.c: 94:     setup();
   515  00F0  120A  118A  20D7  120A  118A  	fcall	_setup
   516  00F5                     l858:	
   517                           
   518                           ;MAIN.c: 99:         if(ADCON0bits.GO_DONE == 0){
   519  00F5  1283               	bcf	3,5	;RP0=0, select bank0
   520  00F6  1303               	bcf	3,6	;RP1=0, select bank0
   521  00F7  189F               	btfsc	31,1	;volatile
   522  00F8  28FA               	goto	u131
   523  00F9  28FB               	goto	u130
   524  00FA                     u131:	
   525  00FA  28FC               	goto	l862
   526  00FB                     u130:	
   527  00FB                     l860:	
   528                           
   529                           ;MAIN.c: 100:             ADCON0bits.GO_DONE = 1;
   530  00FB  149F               	bsf	31,1	;volatile
   531  00FC                     l862:	
   532                           
   533                           ;MAIN.c: 102:         PORTB = adc;
   534  00FC  0879               	movf	_adc,w
   535  00FD  0086               	movwf	6	;volatile
   536  00FE  28F5               	goto	l858
   537  00FF  120A  118A  280C   	ljmp	start
   538  0102                     __end_of_main:	
   539                           
   540                           	psect	text1
   541  00D7                     __ptext1:	
   542 ;; *************** function _setup *****************
   543 ;; Defined at:
   544 ;;		line 109 in file "MAIN.c"
   545 ;; Parameters:    Size  Location     Type
   546 ;;		None
   547 ;; Auto vars:     Size  Location     Type
   548 ;;		None
   549 ;; Return value:  Size  Location     Type
   550 ;;                  1    wreg      void 
   551 ;; Registers used:
   552 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   558 ;;      Params:         0       0       0       0       0
   559 ;;      Locals:         0       0       0       0       0
   560 ;;      Temps:          0       0       0       0       0
   561 ;;      Totals:         0       0       0       0       0
   562 ;;Total ram usage:        0 bytes
   563 ;; Hardware stack levels used:    1
   564 ;; Hardware stack levels required when called:    3
   565 ;; This function calls:
   566 ;;		_I2C_Slave_Init
   567 ;;		_configADC
   568 ;; This function is called by:
   569 ;;		_main
   570 ;; This function uses a non-reentrant model
   571 ;;
   572                           
   573                           
   574                           ;psect for function _setup
   575  00D7                     _setup:	
   576  00D7                     l808:	
   577                           ;incstack = 0
   578                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   579                           
   580                           
   581                           ;MAIN.c: 110:     ANSEL = 0;
   582  00D7  1683               	bsf	3,5	;RP0=1, select bank3
   583  00D8  1703               	bsf	3,6	;RP1=1, select bank3
   584  00D9  0188               	clrf	8	;volatile
   585                           
   586                           ;MAIN.c: 111:     ANSELH = 0;
   587  00DA  0189               	clrf	9	;volatile
   588                           
   589                           ;MAIN.c: 113:     TRISB = 0;
   590  00DB  1683               	bsf	3,5	;RP0=1, select bank1
   591  00DC  1303               	bcf	3,6	;RP1=0, select bank1
   592  00DD  0186               	clrf	6	;volatile
   593                           
   594                           ;MAIN.c: 114:     TRISD = 0;
   595  00DE  0188               	clrf	8	;volatile
   596                           
   597                           ;MAIN.c: 116:     PORTB = 0;
   598  00DF  1283               	bcf	3,5	;RP0=0, select bank0
   599  00E0  1303               	bcf	3,6	;RP1=0, select bank0
   600  00E1  0186               	clrf	6	;volatile
   601                           
   602                           ;MAIN.c: 117:     PORTD = 0;
   603  00E2  0188               	clrf	8	;volatile
   604  00E3                     l810:	
   605                           
   606                           ;MAIN.c: 118:     configADC(0);
   607  00E3  3000               	movlw	0
   608  00E4  120A  118A  2087  120A  118A  	fcall	_configADC
   609  00E9                     l812:	
   610                           
   611                           ;MAIN.c: 119:     I2C_Slave_Init(0x40);
   612  00E9  3040               	movlw	64
   613  00EA  120A  118A  20BD  120A  118A  	fcall	_I2C_Slave_Init
   614  00EF                     l73:	
   615  00EF  0008               	return
   616  00F0                     __end_of_setup:	
   617                           
   618                           	psect	text2
   619  0087                     __ptext2:	
   620 ;; *************** function _configADC *****************
   621 ;; Defined at:
   622 ;;		line 133 in file "ADC.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;  FOSC            1    wreg     unsigned char 
   625 ;; Auto vars:     Size  Location     Type
   626 ;;  FOSC            1    5[COMMON] unsigned char 
   627 ;; Return value:  Size  Location     Type
   628 ;;                  1    wreg      void 
   629 ;; Registers used:
   630 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   631 ;; Tracked objects:
   632 ;;		On entry : 0/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   636 ;;      Params:         0       0       0       0       0
   637 ;;      Locals:         1       0       0       0       0
   638 ;;      Temps:          2       0       0       0       0
   639 ;;      Totals:         3       0       0       0       0
   640 ;;Total ram usage:        3 bytes
   641 ;; Hardware stack levels used:    1
   642 ;; Hardware stack levels required when called:    2
   643 ;; This function calls:
   644 ;;		Nothing
   645 ;; This function is called by:
   646 ;;		_setup
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           
   651                           ;psect for function _configADC
   652  0087                     _configADC:	
   653                           
   654                           ;incstack = 0
   655                           ; Regs used in _configADC: [wreg-fsr0h+status,2+status,0]
   656                           ;configADC@FOSC stored from wreg
   657  0087  00F5               	movwf	configADC@FOSC
   658  0088                     l780:	
   659                           
   660                           ;ADC.c: 135:     INTCONbits.PEIE=1;
   661  0088  170B               	bsf	11,6	;volatile
   662                           
   663                           ;ADC.c: 136:     PIE1bits.ADIE = 1;
   664  0089  1683               	bsf	3,5	;RP0=1, select bank1
   665  008A  1303               	bcf	3,6	;RP1=0, select bank1
   666  008B  170C               	bsf	12,6	;volatile
   667                           
   668                           ;ADC.c: 137:     PIR1bits.ADIF=0;
   669  008C  1283               	bcf	3,5	;RP0=0, select bank0
   670  008D  1303               	bcf	3,6	;RP1=0, select bank0
   671  008E  130C               	bcf	12,6	;volatile
   672                           
   673                           ;ADC.c: 138:     ADCON1bits.ADFM=0;
   674  008F  1683               	bsf	3,5	;RP0=1, select bank1
   675  0090  1303               	bcf	3,6	;RP1=0, select bank1
   676  0091  139F               	bcf	31,7	;volatile
   677                           
   678                           ;ADC.c: 139:     ADCON1bits.VCFG1=0;
   679  0092  129F               	bcf	31,5	;volatile
   680                           
   681                           ;ADC.c: 140:     ADCON1bits.VCFG0=0;
   682  0093  121F               	bcf	31,4	;volatile
   683                           
   684                           ;ADC.c: 141:     ADCON0bits.ADON=1;
   685  0094  1283               	bcf	3,5	;RP0=0, select bank0
   686  0095  1303               	bcf	3,6	;RP1=0, select bank0
   687  0096  141F               	bsf	31,0	;volatile
   688                           
   689                           ;ADC.c: 143:     switch (FOSC){
   690  0097  28A4               	goto	l784
   691  0098                     l183:	
   692                           ;ADC.c: 144:         case 0:
   693                           
   694                           
   695                           ;ADC.c: 145:             ADCON0bits.ADCS1=0;
   696  0098  139F               	bcf	31,7	;volatile
   697                           
   698                           ;ADC.c: 146:             ADCON0bits.ADCS0=0;
   699  0099  131F               	bcf	31,6	;volatile
   700                           
   701                           ;ADC.c: 147:             break;
   702  009A  28BA               	goto	l184
   703  009B                     l185:	
   704                           ;ADC.c: 148:         case 1:
   705                           
   706                           
   707                           ;ADC.c: 149:             ADCON0bits.ADCS1=0;
   708  009B  139F               	bcf	31,7	;volatile
   709                           
   710                           ;ADC.c: 150:             ADCON0bits.ADCS0=1;
   711  009C  171F               	bsf	31,6	;volatile
   712                           
   713                           ;ADC.c: 151:             break;
   714  009D  28BA               	goto	l184
   715  009E                     l186:	
   716                           ;ADC.c: 152:         case 2:
   717                           
   718                           
   719                           ;ADC.c: 153:             ADCON0bits.ADCS1=1;
   720  009E  179F               	bsf	31,7	;volatile
   721                           
   722                           ;ADC.c: 154:             ADCON0bits.ADCS0=0;
   723  009F  131F               	bcf	31,6	;volatile
   724                           
   725                           ;ADC.c: 155:             break;
   726  00A0  28BA               	goto	l184
   727  00A1                     l187:	
   728                           ;ADC.c: 156:         case 3:
   729                           
   730                           
   731                           ;ADC.c: 157:             ADCON0bits.ADCS1=1;
   732  00A1  179F               	bsf	31,7	;volatile
   733                           
   734                           ;ADC.c: 158:             ADCON0bits.ADCS0=1;
   735  00A2  171F               	bsf	31,6	;volatile
   736                           
   737                           ;ADC.c: 159:             break;
   738  00A3  28BA               	goto	l184
   739  00A4                     l784:	
   740  00A4  0875               	movf	configADC@FOSC,w
   741  00A5  00F3               	movwf	??_configADC
   742  00A6  01F4               	clrf	??_configADC+1
   743                           
   744                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   745                           ; Switch size 1, requested type "simple"
   746                           ; Number of cases is 1, Range of values is 0 to 0
   747                           ; switch strategies available:
   748                           ; Name         Instructions Cycles
   749                           ; simple_byte            4     3 (average)
   750                           ; direct_byte           11     8 (fixed)
   751                           ; jumptable            260     6 (fixed)
   752                           ;	Chosen strategy is simple_byte
   753  00A7  0874               	movf	??_configADC+1,w
   754  00A8  3A00               	xorlw	0	; case 0
   755  00A9  1903               	skipnz
   756  00AA  28AC               	goto	l938
   757  00AB  28BA               	goto	l184
   758  00AC                     l938:	
   759                           
   760                           ; Switch size 1, requested type "simple"
   761                           ; Number of cases is 4, Range of values is 0 to 3
   762                           ; switch strategies available:
   763                           ; Name         Instructions Cycles
   764                           ; simple_byte           13     7 (average)
   765                           ; direct_byte           20     8 (fixed)
   766                           ; jumptable            260     6 (fixed)
   767                           ;	Chosen strategy is simple_byte
   768  00AC  0873               	movf	??_configADC,w
   769  00AD  3A00               	xorlw	0	; case 0
   770  00AE  1903               	skipnz
   771  00AF  2898               	goto	l183
   772  00B0  3A01               	xorlw	1	; case 1
   773  00B1  1903               	skipnz
   774  00B2  289B               	goto	l185
   775  00B3  3A03               	xorlw	3	; case 2
   776  00B4  1903               	skipnz
   777  00B5  289E               	goto	l186
   778  00B6  3A01               	xorlw	1	; case 3
   779  00B7  1903               	skipnz
   780  00B8  28A1               	goto	l187
   781  00B9  28BA               	goto	l184
   782  00BA                     l184:	
   783                           
   784                           ;ADC.c: 162:     ADCON0bits.GO_DONE=1;
   785  00BA  149F               	bsf	31,1	;volatile
   786                           
   787                           ;ADC.c: 163:     INTCONbits.GIE = 1;
   788  00BB  178B               	bsf	11,7	;volatile
   789  00BC                     l188:	
   790                           ;ADC.c: 164:     return;
   791                           
   792  00BC  0008               	return
   793  00BD                     __end_of_configADC:	
   794                           
   795                           	psect	text3
   796  00BD                     __ptext3:	
   797 ;; *************** function _I2C_Slave_Init *****************
   798 ;; Defined at:
   799 ;;		line 93 in file "I2C.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;  address         1    wreg     unsigned char 
   802 ;; Auto vars:     Size  Location     Type
   803 ;;  address         1    3[COMMON] unsigned char 
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      void 
   806 ;; Registers used:
   807 ;;		wreg
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   813 ;;      Params:         0       0       0       0       0
   814 ;;      Locals:         1       0       0       0       0
   815 ;;      Temps:          0       0       0       0       0
   816 ;;      Totals:         1       0       0       0       0
   817 ;;Total ram usage:        1 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; Hardware stack levels required when called:    2
   820 ;; This function calls:
   821 ;;		Nothing
   822 ;; This function is called by:
   823 ;;		_setup
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           
   828                           ;psect for function _I2C_Slave_Init
   829  00BD                     _I2C_Slave_Init:	
   830                           
   831                           ;incstack = 0
   832                           ; Regs used in _I2C_Slave_Init: [wreg]
   833                           ;I2C_Slave_Init@address stored from wreg
   834  00BD  00F3               	movwf	I2C_Slave_Init@address
   835  00BE                     l790:	
   836                           
   837                           ;I2C.c: 93: void I2C_Slave_Init(uint8_t address);I2C.c: 94: {;I2C.c: 95:     SSPADD = ad
      +                          dress;
   838  00BE  0873               	movf	I2C_Slave_Init@address,w
   839  00BF  1683               	bsf	3,5	;RP0=1, select bank1
   840  00C0  1303               	bcf	3,6	;RP1=0, select bank1
   841  00C1  0093               	movwf	19	;volatile
   842                           
   843                           ;I2C.c: 96:     SSPCON = 0x36;
   844  00C2  3036               	movlw	54
   845  00C3  1283               	bcf	3,5	;RP0=0, select bank0
   846  00C4  1303               	bcf	3,6	;RP1=0, select bank0
   847  00C5  0094               	movwf	20	;volatile
   848                           
   849                           ;I2C.c: 97:     SSPSTAT = 0x80;
   850  00C6  3080               	movlw	128
   851  00C7  1683               	bsf	3,5	;RP0=1, select bank1
   852  00C8  1303               	bcf	3,6	;RP1=0, select bank1
   853  00C9  0094               	movwf	20	;volatile
   854                           
   855                           ;I2C.c: 98:     SSPCON2 = 0x01;
   856  00CA  3001               	movlw	1
   857  00CB  0091               	movwf	17	;volatile
   858  00CC                     l792:	
   859                           
   860                           ;I2C.c: 99:     TRISC3 = 1;
   861  00CC  1587               	bsf	7,3	;volatile
   862  00CD                     l794:	
   863                           
   864                           ;I2C.c: 100:     TRISC4 = 1;
   865  00CD  1607               	bsf	7,4	;volatile
   866  00CE                     l796:	
   867                           
   868                           ;I2C.c: 101:     GIE = 1;
   869  00CE  178B               	bsf	11,7	;volatile
   870  00CF                     l798:	
   871                           
   872                           ;I2C.c: 102:     PEIE = 1;
   873  00CF  170B               	bsf	11,6	;volatile
   874  00D0                     l800:	
   875                           
   876                           ;I2C.c: 103:     SSPIF = 0;
   877  00D0  1283               	bcf	3,5	;RP0=0, select bank0
   878  00D1  1303               	bcf	3,6	;RP1=0, select bank0
   879  00D2  118C               	bcf	12,3	;volatile
   880  00D3                     l802:	
   881                           
   882                           ;I2C.c: 104:     SSPIE = 1;
   883  00D3  1683               	bsf	3,5	;RP0=1, select bank1
   884  00D4  1303               	bcf	3,6	;RP1=0, select bank1
   885  00D5  158C               	bsf	12,3	;volatile
   886  00D6                     l128:	
   887  00D6  0008               	return
   888  00D7                     __end_of_I2C_Slave_Init:	
   889                           
   890                           	psect	text4
   891  0017                     __ptext4:	
   892 ;; *************** function _isr *****************
   893 ;; Defined at:
   894 ;;		line 52 in file "MAIN.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;		None
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      void 
   901 ;; Registers used:
   902 ;;		wreg, pclath, cstack
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   908 ;;      Params:         0       0       0       0       0
   909 ;;      Locals:         0       0       0       0       0
   910 ;;      Temps:          3       0       0       0       0
   911 ;;      Totals:         3       0       0       0       0
   912 ;;Total ram usage:        3 bytes
   913 ;; Hardware stack levels used:    1
   914 ;; Hardware stack levels required when called:    1
   915 ;; This function calls:
   916 ;;		_readADC
   917 ;; This function is called by:
   918 ;;		Interrupt level 1
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922                           
   923                           ;psect for function _isr
   924  0017                     _isr:	
   925  0017                     i1l818:	
   926                           
   927                           ;MAIN.c: 53:    if(PIR1bits.SSPIF == 1){
   928  0017  1283               	bcf	3,5	;RP0=0, select bank0
   929  0018  1303               	bcf	3,6	;RP1=0, select bank0
   930  0019  1D8C               	btfss	12,3	;volatile
   931  001A  281C               	goto	u3_21
   932  001B  281D               	goto	u3_20
   933  001C                     u3_21:	
   934  001C  2871               	goto	i1l47
   935  001D                     u3_20:	
   936  001D                     i1l820:	
   937                           
   938                           ;MAIN.c: 55:         SSPCONbits.CKP = 0;
   939  001D  1214               	bcf	20,4	;volatile
   940                           
   941                           ;MAIN.c: 57:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
   942  001E  1B14               	btfsc	20,6	;volatile
   943  001F  2821               	goto	u4_21
   944  0020  2822               	goto	u4_20
   945  0021                     u4_21:	
   946  0021  2826               	goto	i1l824
   947  0022                     u4_20:	
   948  0022                     i1l822:	
   949  0022  1F94               	btfss	20,7	;volatile
   950  0023  2825               	goto	u5_21
   951  0024  2826               	goto	u5_20
   952  0025                     u5_21:	
   953  0025  282D               	goto	i1l832
   954  0026                     u5_20:	
   955  0026                     i1l824:	
   956                           
   957                           ;MAIN.c: 58:             z = SSPBUF;
   958  0026  0813               	movf	19,w	;volatile
   959  0027  00F0               	movwf	??_isr
   960  0028  0870               	movf	??_isr,w
   961  0029  00F7               	movwf	_z
   962  002A                     i1l826:	
   963                           
   964                           ;MAIN.c: 59:             SSPCONbits.SSPOV = 0;
   965  002A  1314               	bcf	20,6	;volatile
   966  002B                     i1l828:	
   967                           
   968                           ;MAIN.c: 60:             SSPCONbits.WCOL = 0;
   969  002B  1394               	bcf	20,7	;volatile
   970  002C                     i1l830:	
   971                           
   972                           ;MAIN.c: 61:             SSPCONbits.CKP = 1;
   973  002C  1614               	bsf	20,4	;volatile
   974  002D                     i1l832:	
   975                           
   976                           ;MAIN.c: 64:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
   977  002D  1683               	bsf	3,5	;RP0=1, select bank1
   978  002E  1303               	bcf	3,6	;RP1=0, select bank1
   979  002F  1A94               	btfsc	20,5	;volatile
   980  0030  2832               	goto	u6_21
   981  0031  2833               	goto	u6_20
   982  0032                     u6_21:	
   983  0032  284E               	goto	i1l51
   984  0033                     u6_20:	
   985  0033                     i1l834:	
   986  0033  1914               	btfsc	20,2	;volatile
   987  0034  2836               	goto	u7_21
   988  0035  2837               	goto	u7_20
   989  0036                     u7_21:	
   990  0036  284E               	goto	i1l51
   991  0037                     u7_20:	
   992  0037                     i1l836:	
   993                           
   994                           ;MAIN.c: 66:             z = SSPBUF;
   995  0037  1283               	bcf	3,5	;RP0=0, select bank0
   996  0038  1303               	bcf	3,6	;RP1=0, select bank0
   997  0039  0813               	movf	19,w	;volatile
   998  003A  00F0               	movwf	??_isr
   999  003B  0870               	movf	??_isr,w
  1000  003C  00F7               	movwf	_z
  1001  003D                     i1l838:	
  1002                           
  1003                           ;MAIN.c: 68:             PIR1bits.SSPIF = 0;
  1004  003D  118C               	bcf	12,3	;volatile
  1005  003E                     i1l840:	
  1006                           
  1007                           ;MAIN.c: 69:             SSPCONbits.CKP = 1;
  1008  003E  1614               	bsf	20,4	;volatile
  1009  003F                     i1l52:	
  1010                           ;MAIN.c: 70:             while(!SSPSTATbits.BF);
  1011                           
  1012  003F  1683               	bsf	3,5	;RP0=1, select bank1
  1013  0040  1303               	bcf	3,6	;RP1=0, select bank1
  1014  0041  1C14               	btfss	20,0	;volatile
  1015  0042  2844               	goto	u8_21
  1016  0043  2845               	goto	u8_20
  1017  0044                     u8_21:	
  1018  0044  283F               	goto	i1l52
  1019  0045                     u8_20:	
  1020  0045                     i1l842:	
  1021                           
  1022                           ;MAIN.c: 71:             PORTD = SSPBUF;
  1023  0045  1283               	bcf	3,5	;RP0=0, select bank0
  1024  0046  1303               	bcf	3,6	;RP1=0, select bank0
  1025  0047  0813               	movf	19,w	;volatile
  1026  0048  0088               	movwf	8	;volatile
  1027                           
  1028                           ;MAIN.c: 72:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  1029  0049  3053               	movlw	83
  1030  004A  00F0               	movwf	??_isr
  1031  004B                     u16_27:	
  1032  004B  0BF0               	decfsz	??_isr,f
  1033  004C  284B               	goto	u16_27
  1034                           
  1035                           ;MAIN.c: 74:         }else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  1036  004D  286E               	goto	i1l55
  1037  004E                     i1l51:	
  1038  004E  1A94               	btfsc	20,5	;volatile
  1039  004F  2851               	goto	u9_21
  1040  0050  2852               	goto	u9_20
  1041  0051                     u9_21:	
  1042  0051  286E               	goto	i1l55
  1043  0052                     u9_20:	
  1044  0052                     i1l844:	
  1045  0052  1D14               	btfss	20,2	;volatile
  1046  0053  2855               	goto	u10_21
  1047  0054  2856               	goto	u10_20
  1048  0055                     u10_21:	
  1049  0055  286E               	goto	i1l55
  1050  0056                     u10_20:	
  1051  0056                     i1l846:	
  1052                           
  1053                           ;MAIN.c: 75:             z = SSPBUF;
  1054  0056  1283               	bcf	3,5	;RP0=0, select bank0
  1055  0057  1303               	bcf	3,6	;RP1=0, select bank0
  1056  0058  0813               	movf	19,w	;volatile
  1057  0059  00F0               	movwf	??_isr
  1058  005A  0870               	movf	??_isr,w
  1059  005B  00F7               	movwf	_z
  1060  005C                     i1l848:	
  1061                           
  1062                           ;MAIN.c: 76:             BF = 0;
  1063  005C  1683               	bsf	3,5	;RP0=1, select bank1
  1064  005D  1303               	bcf	3,6	;RP1=0, select bank1
  1065  005E  1014               	bcf	20,0	;volatile
  1066                           
  1067                           ;MAIN.c: 77:             SSPBUF = adc;
  1068  005F  0879               	movf	_adc,w
  1069  0060  1283               	bcf	3,5	;RP0=0, select bank0
  1070  0061  1303               	bcf	3,6	;RP1=0, select bank0
  1071  0062  0093               	movwf	19	;volatile
  1072  0063                     i1l850:	
  1073                           
  1074                           ;MAIN.c: 78:             SSPCONbits.CKP = 1;
  1075  0063  1614               	bsf	20,4	;volatile
  1076                           
  1077                           ;MAIN.c: 79:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  1078  0064  3053               	movlw	83
  1079  0065  00F0               	movwf	??_isr
  1080  0066                     u17_27:	
  1081  0066  0BF0               	decfsz	??_isr,f
  1082  0067  2866               	goto	u17_27
  1083  0068                     i1l57:	
  1084                           ;MAIN.c: 80:             while(SSPSTATbits.BF);
  1085                           
  1086  0068  1683               	bsf	3,5	;RP0=1, select bank1
  1087  0069  1303               	bcf	3,6	;RP1=0, select bank1
  1088  006A  1814               	btfsc	20,0	;volatile
  1089  006B  286D               	goto	u11_21
  1090  006C  286E               	goto	u11_20
  1091  006D                     u11_21:	
  1092  006D  2868               	goto	i1l57
  1093  006E                     u11_20:	
  1094  006E                     i1l55:	
  1095                           
  1096                           ;MAIN.c: 83:         PIR1bits.SSPIF = 0;
  1097  006E  1283               	bcf	3,5	;RP0=0, select bank0
  1098  006F  1303               	bcf	3,6	;RP1=0, select bank0
  1099  0070  118C               	bcf	12,3	;volatile
  1100  0071                     i1l47:	
  1101                           ;MAIN.c: 84:     }
  1102                           
  1103                           
  1104                           ;MAIN.c: 85:     if(ADCON0bits.GO_DONE == 0){
  1105  0071  189F               	btfsc	31,1	;volatile
  1106  0072  2874               	goto	u12_21
  1107  0073  2875               	goto	u12_20
  1108  0074                     u12_21:	
  1109  0074  2880               	goto	i1l61
  1110  0075                     u12_20:	
  1111  0075                     i1l852:	
  1112                           
  1113                           ;MAIN.c: 86:         adc = readADC();
  1114  0075  120A  118A  2102  120A  118A  	fcall	_readADC
  1115  007A  00F0               	movwf	??_isr
  1116  007B  0870               	movf	??_isr,w
  1117  007C  00F9               	movwf	_adc
  1118  007D                     i1l854:	
  1119                           
  1120                           ;MAIN.c: 87:         PIR1bits.ADIF = 0;
  1121  007D  1283               	bcf	3,5	;RP0=0, select bank0
  1122  007E  1303               	bcf	3,6	;RP1=0, select bank0
  1123  007F  130C               	bcf	12,6	;volatile
  1124  0080                     i1l61:	
  1125  0080  0872               	movf	??_isr+2,w
  1126  0081  008A               	movwf	10
  1127  0082  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  1128  0083  0083               	movwf	3
  1129  0084  0EFE               	swapf	btemp,f
  1130  0085  0E7E               	swapf	btemp,w
  1131  0086  0009               	retfie
  1132  0087                     __end_of_isr:	
  1133                           
  1134                           	psect	intentry
  1135  0004                     __pintentry:	
  1136                           ;incstack = 0
  1137                           ; Regs used in _isr: [wreg+pclath+cstack]
  1138                           
  1139  0004                     interrupt_function:	
  1140  007E                     saved_w	set	btemp
  1141  0004  00FE               	movwf	btemp
  1142  0005  0E03               	swapf	3,w
  1143  0006  00F1               	movwf	??_isr+1
  1144  0007  080A               	movf	10,w
  1145  0008  00F2               	movwf	??_isr+2
  1146  0009  120A  118A  2817   	ljmp	_isr
  1147                           
  1148                           	psect	text5
  1149  0102                     __ptext5:	
  1150 ;; *************** function _readADC *****************
  1151 ;; Defined at:
  1152 ;;		line 6 in file "ADC.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;		None
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;		None
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      unsigned char 
  1159 ;; Registers used:
  1160 ;;		wreg
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1166 ;;      Params:         0       0       0       0       0
  1167 ;;      Locals:         0       0       0       0       0
  1168 ;;      Temps:          0       0       0       0       0
  1169 ;;      Totals:         0       0       0       0       0
  1170 ;;Total ram usage:        0 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; This function calls:
  1173 ;;		Nothing
  1174 ;; This function is called by:
  1175 ;;		_isr
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           
  1180                           ;psect for function _readADC
  1181  0102                     _readADC:	
  1182  0102                     i1l804:	
  1183                           ;incstack = 0
  1184                           ; Regs used in _readADC: [wreg]
  1185                           
  1186                           
  1187                           ;ADC.c: 7:     return ADRESH;
  1188  0102  1283               	bcf	3,5	;RP0=0, select bank0
  1189  0103  1303               	bcf	3,6	;RP1=0, select bank0
  1190  0104  081E               	movf	30,w	;volatile
  1191  0105                     i1l157:	
  1192  0105  0008               	return
  1193  0106                     __end_of_readADC:	
  1194  007E                     btemp	set	126	;btemp
  1195  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_configADC

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      30
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      30
                     _I2C_Slave_Init
                          _configADC
 ---------------------------------------------------------------------------------
 (2) _configADC                                            3     3      0      15
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      15
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
                            _readADC
 ---------------------------------------------------------------------------------
 (4) _readADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _I2C_Slave_Init
     _configADC

 _isr (ROOT)
   _readADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Feb 23 15:43:43 2020

                       _z 0077               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      _BF 04A0                        l73 00EF                       l128 00D6  
                     l183 0098                       l184 00BA                       l185 009B  
                     l186 009E                       l187 00A1                       l188 00BC  
                     l800 00D0                       l802 00D3                       l810 00E3  
                     l812 00E9                       l808 00D7                       l780 0088  
                     l860 00FB                       l790 00BE                       l862 00FC  
                     l792 00CC                       l784 00A4                       l856 00F0  
                     l794 00CD                       l938 00AC                       l858 00F5  
                     l796 00CE                       l798 00CF                       _GIE 005F  
                     u130 00FB                       u131 00FA              __CFG_CPD$OFF 0000  
                     _adc 0079                       _isr 0017              __CFG_LVP$OFF 0000  
                    ?_isr 0070                      _PEIE 005E                      i1l51 004E  
                    i1l52 003F                      i1l61 0080                      i1l55 006E  
                    i1l47 0071                      i1l57 0068                      u3_20 001D  
                    u3_21 001C                      u4_20 0022                      u4_21 0021  
                    u5_20 0026                      u5_21 0025                      u6_20 0033  
                    u6_21 0032                      u7_20 0037                      u7_21 0036  
                    u8_20 0045                      u8_21 0044                      u9_20 0052  
                    u9_21 0051              __CFG_WRT$OFF 0000                      _dato 0076  
                    _main 00F0                      btemp 007E                      start 000C  
           __CFG_IESO$OFF 0000                     ??_isr 0070                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     i1l157 0105  
                   i1l804 0102                     i1l820 001D                     i1l830 002C  
                   i1l822 0022                     i1l840 003E                     i1l832 002D  
                   i1l824 0026                     i1l850 0063                     i1l842 0045  
                   i1l834 0033                     i1l826 002A                     i1l818 0017  
                   i1l852 0075                     i1l844 0052                     i1l836 0037  
                   i1l828 002B                     i1l854 007D                     i1l846 0056  
                   i1l838 003D                     i1l848 005C                     u10_20 0056  
                   u10_21 0055                     u11_20 006E                     u11_21 006D  
                   u12_20 0075                     u12_21 0074                     u16_27 004B  
                   u17_27 0066                     _PORTB 0006                     _PORTD 0008  
                   _TRISB 0086                     _TRISD 0088                     _SSPIE 0463  
                   _SSPIF 0063            __CFG_FCMEN$OFF 0000           __end_of_readADC 0106  
                   _setup 00D7            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 0102                    ??_main 0076  
                  _ADRESH 001E                    ?_setup 0070                    _ANSELH 0189  
                  _SSPADD 0093                    _TRISC3 043B                    _TRISC4 043C  
                  _SSPBUF 0013                    _SSPCON 0014            __CFG_PWRTE$OFF 0000  
               ??_readADC 0070                    saved_w 007E   __end_of__initialization 0013  
          __pcstackCOMMON 0070   __size_of_I2C_Slave_Init 001A             __end_of_setup 00F0  
      __size_of_configADC 0036                   ??_setup 0076     I2C_Slave_Init@address 0073  
              __pmaintext 00F0                __pintentry 0004                   _SSPCON2 0091  
                 _SSPSTAT 0094         __end_of_configADC 00BD                 _ANSELbits 0188  
                 __ptext1 00D7                   __ptext2 0087                   __ptext3 00BD  
                 __ptext4 0017                   __ptext5 0102                   _readADC 0102  
            __size_of_isr 0070      end_of_initialization 0013            _I2C_Slave_Init 00BD  
               _TRISAbits 0085                 _TRISBbits 0086                 _TRISCbits 0087  
               _TRISEbits 0089    __end_of_I2C_Slave_Init 00D7       start_initialization 000F  
             __end_of_isr 0087  __CFG_FOSC$INTRC_NOCLKOUT 0000           ?_I2C_Slave_Init 0070  
             __pbssCOMMON 0076                 ___latbits 0002                 _configADC 0087  
                ?_readADC 0070            __size_of_setup 0019         interrupt_function 0004  
                _PIE1bits 008C                  _PIR1bits 000C                ?_configADC 0070  
              _ADCON0bits 001F                _ADCON1bits 009F                  _adcValue 0078  
              _ANSELHbits 0189          __size_of_readADC 0004         __CFG_BOR4V$BOR40V 0000  
        ??_I2C_Slave_Init 0073             __size_of_main 0012               ??_configADC 0073  
              _INTCONbits 000B                  intlevel1 0000               _SSPCON2bits 0091  
           configADC@FOSC 0075                _SSPCONbits 0014  
